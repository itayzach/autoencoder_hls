-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_layer_0_0_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_TVALID : IN STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_V_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    data_V_TREADY : OUT STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_V_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of compute_layer_0_0_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv55_481FD3 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000010010000001111111010011";
    constant ap_const_lv56_FFFFFFFF2360AD : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111001000110110000010101101";
    constant ap_const_lv55_604360 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000011000000100001101100000";
    constant ap_const_lv56_FFFFFFFF0B65D5 : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111000010110110010111010101";
    constant ap_const_lv56_FFFFFFFF61616D : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111011000010110000101101101";
    constant ap_const_lv56_EA5607 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000111010100101011000000111";
    constant ap_const_lv56_FFFFFFFF7C8297 : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111011111001000001010010111";
    constant ap_const_lv56_25C5183 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010010111000101000110000011";
    constant ap_const_lv55_7FFFFFFF8C10FD : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111100011000001000011111101";
    constant ap_const_lv56_FFFFFFFF60FB96 : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111011000001111101110010110";
    constant ap_const_lv55_7FFFFFFFB527AC : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111101101010010011110101100";
    constant ap_const_lv56_2B87EEC : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010101110000111111011101100";
    constant ap_const_lv55_7FFFFFFF82ACDE : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111100000101010110011011110";
    constant ap_const_lv55_7FFFFFFF9E8345 : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111100111101000001101000101";
    constant ap_const_lv56_FFFFFFFF6AD5A0 : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111011010101101010110100000";
    constant ap_const_lv51_7C84D : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000001111100100001001101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_82E56F : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000101110010101101111";
    constant ap_const_lv32_3B782F : STD_LOGIC_VECTOR (31 downto 0) := "00000000001110110111100000101111";
    constant ap_const_lv32_FFD0D1CC : STD_LOGIC_VECTOR (31 downto 0) := "11111111110100001101000111001100";
    constant ap_const_lv32_C003E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000011000000000000111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_216_fu_1267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_reg_1636 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_reg_1643 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_1649 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_reg_1655 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1661 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_0_1_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_98_reg_1671 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_100_reg_1676 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_138_1_reg_1681 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_1_1_reg_1686 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_1_2_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_reg_1696 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_138_2_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_reg_1706 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_108_reg_1711 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_138_2_3_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_3_reg_1721 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_reg_1726 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_138_3_2_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_reg_1736 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_Val2_3_3_fu_114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_3_cast1_fu_1454_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_s_fu_115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_cast_fu_1309_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_2_1_fu_116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_2_cast1_fu_1404_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_1_fu_117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_1_cast_fu_1358_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_1_1_fu_118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_0_1_fu_119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_3_fu_121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_2_cast_fu_1409_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_0_3_fu_122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_fu_123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_2_fu_124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_3_cast_fu_1459_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_1_3_fu_126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_fu_127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_fu_128_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_0_2_fu_129_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_115_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_0_1_fu_119_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_0_2_fu_129_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_0_3_fu_122_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_1_fu_117_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_1_1_fu_118_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_1_2_fu_120_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_1_3_fu_126_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_2_fu_123_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_2_1_fu_116_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_2_2_fu_124_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_2_3_fu_121_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_3_fu_125_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_3_1_fu_127_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_3_2_fu_128_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_3_3_fu_114_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp3_fu_1529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_fu_1519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_1513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_1504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1577_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_1510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_1522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1595_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_0_V_write_assig_fu_1539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_1_V_write_assig_fu_1561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_2_V_write_assig_fu_1583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_3_V_write_assig_fu_1606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_100_reg_1676 <= p_Val2_0_3_fu_122_p2(54 downto 24);
                tmp_102_reg_1643 <= data_V_TDATA(63 downto 32);
                tmp_103_reg_1696 <= p_Val2_1_3_fu_126_p2(54 downto 24);
                tmp_105_reg_1649 <= data_V_TDATA(95 downto 64);
                tmp_106_reg_1706 <= p_Val2_2_1_fu_116_p2(54 downto 24);
                tmp_108_reg_1711 <= p_Val2_2_2_fu_124_p2(54 downto 24);
                tmp_110_reg_1655 <= data_V_TDATA(127 downto 96);
                tmp_111_reg_1726 <= p_Val2_3_1_fu_127_p2(54 downto 24);
                tmp_113_reg_1736 <= p_Val2_3_3_fu_114_p2(54 downto 24);
                tmp_138_0_1_reg_1666 <= p_Val2_0_1_fu_119_p2(55 downto 24);
                tmp_138_1_1_reg_1686 <= p_Val2_1_1_fu_118_p2(55 downto 24);
                tmp_138_1_2_reg_1691 <= p_Val2_1_2_fu_120_p2(55 downto 24);
                tmp_138_1_reg_1681 <= p_Val2_1_fu_117_p2(55 downto 24);
                tmp_138_2_3_reg_1716 <= p_Val2_2_3_fu_121_p2(55 downto 24);
                tmp_138_2_reg_1701 <= p_Val2_2_fu_123_p2(55 downto 24);
                tmp_138_3_2_reg_1731 <= p_Val2_3_2_fu_128_p2(55 downto 24);
                tmp_138_3_reg_1721 <= p_Val2_3_fu_125_p2(55 downto 24);
                tmp_216_reg_1636 <= tmp_216_fu_1267_p1;
                tmp_98_reg_1671 <= p_Val2_0_2_fu_129_p2(50 downto 24);
                tmp_s_reg_1661 <= p_Val2_s_fu_115_p2(55 downto 24);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
        OP1_V_1_cast_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_102_reg_1643),56));

        OP1_V_2_cast1_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_reg_1649),55));

        OP1_V_2_cast_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_reg_1649),56));

        OP1_V_3_cast1_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_110_reg_1655),55));

        OP1_V_3_cast_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_110_reg_1655),56));

        OP1_V_cast_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_216_reg_1636),56));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, data_V_TVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (data_V_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, data_V_TVALID, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (data_V_TVALID = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, data_V_TVALID)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (data_V_TVALID = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= res_0_V_write_assig_fu_1539_p2;
    ap_return_1 <= res_1_V_write_assig_fu_1561_p2;
    ap_return_2 <= res_2_V_write_assig_fu_1583_p2;
    ap_return_3 <= res_3_V_write_assig_fu_1606_p2;

    data_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_TVALID)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_TDATA_blk_n <= data_V_TVALID;
        else 
            data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_TREADY <= ap_const_logic_1;
        else 
            data_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_0_1_fu_119_p1 <= OP1_V_cast_fu_1309_p1(32 - 1 downto 0);
    p_Val2_0_1_fu_119_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv56_EA5607) * signed(p_Val2_0_1_fu_119_p1))), 56));
    p_Val2_0_2_fu_129_p1 <= tmp_216_reg_1636;
    p_Val2_0_2_fu_129_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_7C84D) * signed(p_Val2_0_2_fu_129_p1))), 51));
    p_Val2_0_3_fu_122_p1 <= tmp_216_reg_1636;
    p_Val2_0_3_fu_122_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFF8C10FD) * signed(p_Val2_0_3_fu_122_p1))), 55));
    p_Val2_1_1_fu_118_p1 <= OP1_V_1_cast_fu_1358_p1(32 - 1 downto 0);
    p_Val2_1_1_fu_118_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF61616D) * signed(p_Val2_1_1_fu_118_p1))), 56));
    p_Val2_1_2_fu_120_p1 <= OP1_V_1_cast_fu_1358_p1(32 - 1 downto 0);
    p_Val2_1_2_fu_120_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF7C8297) * signed(p_Val2_1_2_fu_120_p1))), 56));
    p_Val2_1_3_fu_126_p1 <= tmp_102_reg_1643;
    p_Val2_1_3_fu_126_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFF82ACDE) * signed(p_Val2_1_3_fu_126_p1))), 55));
    p_Val2_1_fu_117_p1 <= OP1_V_1_cast_fu_1358_p1(32 - 1 downto 0);
    p_Val2_1_fu_117_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF0B65D5) * signed(p_Val2_1_fu_117_p1))), 56));
    p_Val2_2_1_fu_116_p1 <= OP1_V_2_cast1_fu_1404_p1(32 - 1 downto 0);
    p_Val2_2_1_fu_116_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv55_604360) * signed(p_Val2_2_1_fu_116_p1))), 55));
    p_Val2_2_2_fu_124_p1 <= OP1_V_2_cast1_fu_1404_p1(32 - 1 downto 0);
    p_Val2_2_2_fu_124_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFFB527AC) * signed(p_Val2_2_2_fu_124_p1))), 55));
    p_Val2_2_3_fu_121_p1 <= OP1_V_2_cast_fu_1409_p1(32 - 1 downto 0);
    p_Val2_2_3_fu_121_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv56_25C5183) * signed(p_Val2_2_3_fu_121_p1))), 56));
    p_Val2_2_fu_123_p1 <= OP1_V_2_cast_fu_1409_p1(32 - 1 downto 0);
    p_Val2_2_fu_123_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF60FB96) * signed(p_Val2_2_fu_123_p1))), 56));
    p_Val2_3_1_fu_127_p1 <= OP1_V_3_cast1_fu_1454_p1(32 - 1 downto 0);
    p_Val2_3_1_fu_127_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFF9E8345) * signed(p_Val2_3_1_fu_127_p1))), 55));
    p_Val2_3_2_fu_128_p1 <= OP1_V_3_cast_fu_1459_p1(32 - 1 downto 0);
    p_Val2_3_2_fu_128_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF6AD5A0) * signed(p_Val2_3_2_fu_128_p1))), 56));
    p_Val2_3_3_fu_114_p1 <= OP1_V_3_cast1_fu_1454_p1(32 - 1 downto 0);
    p_Val2_3_3_fu_114_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv55_481FD3) * signed(p_Val2_3_3_fu_114_p1))), 55));
    p_Val2_3_fu_125_p1 <= OP1_V_3_cast_fu_1459_p1(32 - 1 downto 0);
    p_Val2_3_fu_125_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv56_2B87EEC) * signed(p_Val2_3_fu_125_p1))), 56));
    p_Val2_s_fu_115_p1 <= OP1_V_cast_fu_1309_p1(32 - 1 downto 0);
    p_Val2_s_fu_115_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv56_FFFFFFFF2360AD) * signed(p_Val2_s_fu_115_p1))), 56));
    res_0_V_write_assig_fu_1539_p2 <= std_logic_vector(unsigned(tmp1_fu_1525_p2) + unsigned(tmp2_fu_1534_p2));
    res_1_V_write_assig_fu_1561_p2 <= std_logic_vector(unsigned(tmp4_fu_1545_p2) + unsigned(tmp5_fu_1555_p2));
    res_2_V_write_assig_fu_1583_p2 <= std_logic_vector(unsigned(tmp7_fu_1567_p2) + unsigned(tmp8_fu_1577_p2));
    res_3_V_write_assig_fu_1606_p2 <= std_logic_vector(unsigned(tmp10_fu_1589_p2) + unsigned(tmp11_fu_1601_p2));
    tmp10_fu_1589_p2 <= std_logic_vector(signed(tmp_104_fu_1510_p1) + signed(tmp_101_fu_1507_p1));
    tmp11_fu_1601_p2 <= std_logic_vector(unsigned(tmp_138_2_3_reg_1716) + unsigned(tmp12_fu_1595_p2));
    tmp12_fu_1595_p2 <= std_logic_vector(unsigned(ap_const_lv32_C003E) + unsigned(tmp_114_fu_1522_p1));
    tmp1_fu_1525_p2 <= std_logic_vector(unsigned(tmp_138_1_reg_1681) + unsigned(tmp_s_reg_1661));
    tmp2_fu_1534_p2 <= std_logic_vector(unsigned(tmp_138_2_reg_1701) + unsigned(tmp3_fu_1529_p2));
    tmp3_fu_1529_p2 <= std_logic_vector(unsigned(ap_const_lv32_82E56F) + unsigned(tmp_138_3_reg_1721));
    tmp4_fu_1545_p2 <= std_logic_vector(unsigned(tmp_138_1_1_reg_1686) + unsigned(tmp_138_0_1_reg_1666));
    tmp5_fu_1555_p2 <= std_logic_vector(signed(tmp_107_fu_1513_p1) + signed(tmp6_fu_1549_p2));
    tmp6_fu_1549_p2 <= std_logic_vector(unsigned(ap_const_lv32_3B782F) + unsigned(tmp_112_fu_1519_p1));
    tmp7_fu_1567_p2 <= std_logic_vector(unsigned(tmp_138_1_2_reg_1691) + unsigned(tmp_99_fu_1504_p1));
    tmp8_fu_1577_p2 <= std_logic_vector(signed(tmp_109_fu_1516_p1) + signed(tmp9_fu_1572_p2));
    tmp9_fu_1572_p2 <= std_logic_vector(signed(ap_const_lv32_FFD0D1CC) + signed(tmp_138_3_2_reg_1731));
        tmp_101_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_100_reg_1676),32));

        tmp_104_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_103_reg_1696),32));

        tmp_107_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_106_reg_1706),32));

        tmp_109_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_108_reg_1711),32));

        tmp_112_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_111_reg_1726),32));

        tmp_114_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_113_reg_1736),32));

    tmp_216_fu_1267_p1 <= data_V_TDATA(32 - 1 downto 0);
        tmp_99_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_98_reg_1671),32));

end behav;
