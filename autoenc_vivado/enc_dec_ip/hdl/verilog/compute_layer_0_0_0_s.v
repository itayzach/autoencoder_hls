// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_layer_0_0_0_s (
        ap_clk,
        ap_rst,
        data_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [127:0] data_V_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
input   ap_ce;

reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire  signed [55:0] OP1_V_cast_fu_1267_p1;
wire  signed [55:0] OP1_V_1_cast_fu_1288_p1;
wire  signed [54:0] OP1_V_2_cast1_fu_1305_p1;
wire  signed [55:0] OP1_V_2_cast_fu_1311_p1;
wire  signed [54:0] OP1_V_3_cast1_fu_1327_p1;
wire  signed [55:0] OP1_V_3_cast_fu_1333_p1;
reg   [31:0] tmp_s_reg_1683;
reg   [31:0] tmp_136_0_1_reg_1688;
reg   [26:0] tmp_104_reg_1693;
reg   [30:0] tmp_107_reg_1698;
reg   [31:0] tmp_136_1_reg_1703;
reg   [31:0] tmp_136_1_1_reg_1708;
reg   [31:0] tmp_136_1_2_reg_1713;
reg   [30:0] tmp_110_reg_1718;
reg   [31:0] tmp_136_2_reg_1723;
reg   [30:0] tmp_113_reg_1728;
reg   [30:0] tmp_115_reg_1733;
reg   [31:0] tmp_136_2_3_reg_1738;
reg   [31:0] tmp_136_3_reg_1743;
reg   [30:0] tmp_118_reg_1748;
reg   [31:0] tmp_136_3_2_reg_1753;
reg   [30:0] tmp_120_reg_1758;
wire   [23:0] grp_fu_100_p0;
wire  signed [31:0] grp_fu_100_p1;
wire    ap_block_pp0_stage0;
wire  signed [24:0] grp_fu_101_p0;
wire  signed [31:0] grp_fu_101_p1;
wire   [23:0] grp_fu_102_p0;
wire  signed [31:0] grp_fu_102_p1;
wire  signed [24:0] grp_fu_103_p0;
wire  signed [31:0] grp_fu_103_p1;
wire  signed [24:0] grp_fu_104_p0;
wire  signed [31:0] grp_fu_104_p1;
wire   [24:0] grp_fu_105_p0;
wire  signed [31:0] grp_fu_105_p1;
wire  signed [24:0] grp_fu_106_p0;
wire  signed [31:0] grp_fu_106_p1;
wire   [26:0] grp_fu_107_p0;
wire  signed [31:0] grp_fu_107_p1;
wire  signed [23:0] grp_fu_108_p0;
wire  signed [24:0] grp_fu_109_p0;
wire  signed [31:0] grp_fu_109_p1;
wire  signed [23:0] grp_fu_110_p0;
wire  signed [31:0] grp_fu_110_p1;
wire   [26:0] grp_fu_111_p0;
wire  signed [31:0] grp_fu_111_p1;
wire  signed [23:0] grp_fu_112_p0;
wire  signed [23:0] grp_fu_113_p0;
wire  signed [31:0] grp_fu_113_p1;
wire  signed [24:0] grp_fu_114_p0;
wire  signed [31:0] grp_fu_114_p1;
wire   [19:0] grp_fu_115_p0;
wire  signed [31:0] tmp_267_fu_1253_p1;
wire  signed [31:0] tmp_109_fu_1273_p4;
wire  signed [31:0] tmp_112_fu_1295_p4;
wire  signed [31:0] tmp_117_fu_1317_p4;
wire   [55:0] grp_fu_101_p2;
wire   [55:0] grp_fu_105_p2;
wire   [50:0] grp_fu_115_p2;
wire   [54:0] grp_fu_108_p2;
wire   [55:0] grp_fu_103_p2;
wire   [55:0] grp_fu_104_p2;
wire   [55:0] grp_fu_106_p2;
wire   [54:0] grp_fu_112_p2;
wire   [55:0] grp_fu_109_p2;
wire   [54:0] grp_fu_102_p2;
wire   [54:0] grp_fu_110_p2;
wire   [55:0] grp_fu_107_p2;
wire   [55:0] grp_fu_111_p2;
wire   [54:0] grp_fu_113_p2;
wire   [55:0] grp_fu_114_p2;
wire   [54:0] grp_fu_100_p2;
wire   [31:0] tmp3_fu_1524_p2;
wire   [31:0] tmp1_fu_1520_p2;
wire   [31:0] tmp2_fu_1529_p2;
wire  signed [31:0] tmp_119_fu_1514_p1;
wire  signed [31:0] tmp_114_fu_1508_p1;
wire   [31:0] tmp6_fu_1544_p2;
wire   [31:0] tmp4_fu_1540_p2;
wire   [31:0] tmp5_fu_1550_p2;
wire  signed [31:0] tmp_105_fu_1499_p1;
wire  signed [31:0] tmp_116_fu_1511_p1;
wire   [31:0] tmp9_fu_1567_p2;
wire   [31:0] tmp7_fu_1562_p2;
wire   [31:0] tmp8_fu_1572_p2;
wire  signed [31:0] tmp_111_fu_1505_p1;
wire  signed [31:0] tmp_108_fu_1502_p1;
wire  signed [31:0] tmp_121_fu_1517_p1;
wire   [31:0] tmp12_fu_1590_p2;
wire   [31:0] tmp10_fu_1584_p2;
wire   [31:0] tmp11_fu_1596_p2;
wire   [31:0] res_0_V_write_assig_fu_1534_p2;
wire   [31:0] res_1_V_write_assig_fu_1556_p2;
wire   [31:0] res_2_V_write_assig_fu_1578_p2;
wire   [31:0] res_3_V_write_assig_fu_1601_p2;
reg    grp_fu_100_ce;
reg    grp_fu_101_ce;
reg    grp_fu_102_ce;
reg    grp_fu_103_ce;
reg    grp_fu_104_ce;
reg    grp_fu_105_ce;
reg    grp_fu_106_ce;
reg    grp_fu_107_ce;
reg    grp_fu_108_ce;
reg    grp_fu_109_ce;
reg    grp_fu_110_ce;
reg    grp_fu_111_ce;
reg    grp_fu_112_ce;
reg    grp_fu_113_ce;
reg    grp_fu_114_ce;
reg    grp_fu_115_ce;
reg    ap_ce_reg;
reg   [127:0] data_V_read_int_reg;
reg   [31:0] ap_return_0_int_reg;
reg   [31:0] ap_return_1_int_reg;
reg   [31:0] ap_return_2_int_reg;
reg   [31:0] ap_return_3_int_reg;

encoder_decoder_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mhbi_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_100_p0),
    .din1(grp_fu_100_p1),
    .ce(grp_fu_100_ce),
    .dout(grp_fu_100_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_101_p0),
    .din1(grp_fu_101_p1),
    .ce(grp_fu_101_ce),
    .dout(grp_fu_101_p2)
);

encoder_decoder_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mhbi_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_102_p0),
    .din1(grp_fu_102_p1),
    .ce(grp_fu_102_ce),
    .dout(grp_fu_102_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_103_p0),
    .din1(grp_fu_103_p1),
    .ce(grp_fu_103_ce),
    .dout(grp_fu_103_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_104_p0),
    .din1(grp_fu_104_p1),
    .ce(grp_fu_104_ce),
    .dout(grp_fu_104_p2)
);

encoder_decoder_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mjbC_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_105_p0),
    .din1(grp_fu_105_p1),
    .ce(grp_fu_105_ce),
    .dout(grp_fu_105_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_106_p0),
    .din1(grp_fu_106_p1),
    .ce(grp_fu_106_ce),
    .dout(grp_fu_106_p2)
);

encoder_decoder_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mkbM_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_107_p0),
    .din1(grp_fu_107_p1),
    .ce(grp_fu_107_ce),
    .dout(grp_fu_107_p2)
);

encoder_decoder_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mlbW_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_108_p0),
    .din1(tmp_267_fu_1253_p1),
    .ce(grp_fu_108_ce),
    .dout(grp_fu_108_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_109_p0),
    .din1(grp_fu_109_p1),
    .ce(grp_fu_109_ce),
    .dout(grp_fu_109_p2)
);

encoder_decoder_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mlbW_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_110_p0),
    .din1(grp_fu_110_p1),
    .ce(grp_fu_110_ce),
    .dout(grp_fu_110_p2)
);

encoder_decoder_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mkbM_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_111_p0),
    .din1(grp_fu_111_p1),
    .ce(grp_fu_111_ce),
    .dout(grp_fu_111_p2)
);

encoder_decoder_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mlbW_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_112_p0),
    .din1(tmp_109_fu_1273_p4),
    .ce(grp_fu_112_ce),
    .dout(grp_fu_112_p2)
);

encoder_decoder_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 55 ))
encoder_decoder_mlbW_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_113_p0),
    .din1(grp_fu_113_p1),
    .ce(grp_fu_113_ce),
    .dout(grp_fu_113_p2)
);

encoder_decoder_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mibs_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_114_p0),
    .din1(grp_fu_114_p1),
    .ce(grp_fu_114_ce),
    .dout(grp_fu_114_p2)
);

encoder_decoder_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
encoder_decoder_mmb6_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_115_p0),
    .din1(tmp_267_fu_1253_p1),
    .ce(grp_fu_115_ce),
    .dout(grp_fu_115_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= res_0_V_write_assig_fu_1534_p2;
        ap_return_1_int_reg <= res_1_V_write_assig_fu_1556_p2;
        ap_return_2_int_reg <= res_2_V_write_assig_fu_1578_p2;
        ap_return_3_int_reg <= res_3_V_write_assig_fu_1601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        data_V_read_int_reg <= data_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_104_reg_1693 <= {{grp_fu_115_p2[50:24]}};
        tmp_107_reg_1698 <= {{grp_fu_108_p2[54:24]}};
        tmp_110_reg_1718 <= {{grp_fu_112_p2[54:24]}};
        tmp_113_reg_1728 <= {{grp_fu_102_p2[54:24]}};
        tmp_115_reg_1733 <= {{grp_fu_110_p2[54:24]}};
        tmp_118_reg_1748 <= {{grp_fu_113_p2[54:24]}};
        tmp_120_reg_1758 <= {{grp_fu_100_p2[54:24]}};
        tmp_136_0_1_reg_1688 <= {{grp_fu_105_p2[55:24]}};
        tmp_136_1_1_reg_1708 <= {{grp_fu_104_p2[55:24]}};
        tmp_136_1_2_reg_1713 <= {{grp_fu_106_p2[55:24]}};
        tmp_136_1_reg_1703 <= {{grp_fu_103_p2[55:24]}};
        tmp_136_2_3_reg_1738 <= {{grp_fu_107_p2[55:24]}};
        tmp_136_2_reg_1723 <= {{grp_fu_109_p2[55:24]}};
        tmp_136_3_2_reg_1753 <= {{grp_fu_114_p2[55:24]}};
        tmp_136_3_reg_1743 <= {{grp_fu_111_p2[55:24]}};
        tmp_s_reg_1683 <= {{grp_fu_101_p2[55:24]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = res_0_V_write_assig_fu_1534_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = res_1_V_write_assig_fu_1556_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = res_2_V_write_assig_fu_1578_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = res_3_V_write_assig_fu_1601_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_100_ce = 1'b1;
    end else begin
        grp_fu_100_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_101_ce = 1'b1;
    end else begin
        grp_fu_101_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_102_ce = 1'b1;
    end else begin
        grp_fu_102_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_103_ce = 1'b1;
    end else begin
        grp_fu_103_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_105_ce = 1'b1;
    end else begin
        grp_fu_105_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_106_ce = 1'b1;
    end else begin
        grp_fu_106_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_107_ce = 1'b1;
    end else begin
        grp_fu_107_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_109_ce = 1'b1;
    end else begin
        grp_fu_109_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_110_ce = 1'b1;
    end else begin
        grp_fu_110_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_111_ce = 1'b1;
    end else begin
        grp_fu_111_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_112_ce = 1'b1;
    end else begin
        grp_fu_112_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_113_ce = 1'b1;
    end else begin
        grp_fu_113_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_114_ce = 1'b1;
    end else begin
        grp_fu_114_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_115_ce = 1'b1;
    end else begin
        grp_fu_115_ce = 1'b0;
    end
end

assign OP1_V_1_cast_fu_1288_p1 = tmp_109_fu_1273_p4;

assign OP1_V_2_cast1_fu_1305_p1 = tmp_112_fu_1295_p4;

assign OP1_V_2_cast_fu_1311_p1 = tmp_112_fu_1295_p4;

assign OP1_V_3_cast1_fu_1327_p1 = tmp_117_fu_1317_p4;

assign OP1_V_3_cast_fu_1333_p1 = tmp_117_fu_1317_p4;

assign OP1_V_cast_fu_1267_p1 = tmp_267_fu_1253_p1;

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign grp_fu_100_p0 = 55'd4726739;

assign grp_fu_100_p1 = OP1_V_3_cast1_fu_1327_p1;

assign grp_fu_101_p0 = 56'd72057594023469229;

assign grp_fu_101_p1 = OP1_V_cast_fu_1267_p1;

assign grp_fu_102_p0 = 55'd6308704;

assign grp_fu_102_p1 = OP1_V_2_cast1_fu_1305_p1;

assign grp_fu_103_p0 = 56'd72057594021897685;

assign grp_fu_103_p1 = OP1_V_1_cast_fu_1288_p1;

assign grp_fu_104_p0 = 56'd72057594027532653;

assign grp_fu_104_p1 = OP1_V_1_cast_fu_1288_p1;

assign grp_fu_105_p0 = 56'd15357447;

assign grp_fu_105_p1 = OP1_V_cast_fu_1267_p1;

assign grp_fu_106_p0 = 56'd72057594029310615;

assign grp_fu_106_p1 = OP1_V_1_cast_fu_1288_p1;

assign grp_fu_107_p0 = 56'd39604611;

assign grp_fu_107_p1 = OP1_V_2_cast_fu_1311_p1;

assign grp_fu_108_p0 = 55'd36028797011366141;

assign grp_fu_109_p0 = 56'd72057594027506582;

assign grp_fu_109_p1 = OP1_V_2_cast_fu_1311_p1;

assign grp_fu_110_p0 = 55'd36028797014058924;

assign grp_fu_110_p1 = OP1_V_2_cast1_fu_1305_p1;

assign grp_fu_111_p0 = 56'd45645548;

assign grp_fu_111_p1 = OP1_V_3_cast_fu_1333_p1;

assign grp_fu_112_p0 = 55'd36028797010750686;

assign grp_fu_113_p0 = 55'd36028797012575045;

assign grp_fu_113_p1 = OP1_V_3_cast1_fu_1327_p1;

assign grp_fu_114_p0 = 56'd72057594028152224;

assign grp_fu_114_p1 = OP1_V_3_cast_fu_1333_p1;

assign grp_fu_115_p0 = 51'd510029;

assign res_0_V_write_assig_fu_1534_p2 = (tmp1_fu_1520_p2 + tmp2_fu_1529_p2);

assign res_1_V_write_assig_fu_1556_p2 = (tmp4_fu_1540_p2 + tmp5_fu_1550_p2);

assign res_2_V_write_assig_fu_1578_p2 = (tmp7_fu_1562_p2 + tmp8_fu_1572_p2);

assign res_3_V_write_assig_fu_1601_p2 = (tmp10_fu_1584_p2 + tmp11_fu_1596_p2);

assign tmp10_fu_1584_p2 = ($signed(tmp_111_fu_1505_p1) + $signed(tmp_108_fu_1502_p1));

assign tmp11_fu_1596_p2 = (tmp_136_2_3_reg_1738 + tmp12_fu_1590_p2);

assign tmp12_fu_1590_p2 = ($signed(32'd786494) + $signed(tmp_121_fu_1517_p1));

assign tmp1_fu_1520_p2 = (tmp_136_1_reg_1703 + tmp_s_reg_1683);

assign tmp2_fu_1529_p2 = (tmp_136_2_reg_1723 + tmp3_fu_1524_p2);

assign tmp3_fu_1524_p2 = (32'd8578415 + tmp_136_3_reg_1743);

assign tmp4_fu_1540_p2 = (tmp_136_1_1_reg_1708 + tmp_136_0_1_reg_1688);

assign tmp5_fu_1550_p2 = ($signed(tmp_114_fu_1508_p1) + $signed(tmp6_fu_1544_p2));

assign tmp6_fu_1544_p2 = ($signed(32'd3897391) + $signed(tmp_119_fu_1514_p1));

assign tmp7_fu_1562_p2 = ($signed(tmp_136_1_2_reg_1713) + $signed(tmp_105_fu_1499_p1));

assign tmp8_fu_1572_p2 = ($signed(tmp_116_fu_1511_p1) + $signed(tmp9_fu_1567_p2));

assign tmp9_fu_1567_p2 = ($signed(32'd4291875276) + $signed(tmp_136_3_2_reg_1753));

assign tmp_105_fu_1499_p1 = $signed(tmp_104_reg_1693);

assign tmp_108_fu_1502_p1 = $signed(tmp_107_reg_1698);

assign tmp_109_fu_1273_p4 = {{data_V_read_int_reg[63:32]}};

assign tmp_111_fu_1505_p1 = $signed(tmp_110_reg_1718);

assign tmp_112_fu_1295_p4 = {{data_V_read_int_reg[95:64]}};

assign tmp_114_fu_1508_p1 = $signed(tmp_113_reg_1728);

assign tmp_116_fu_1511_p1 = $signed(tmp_115_reg_1733);

assign tmp_117_fu_1317_p4 = {{data_V_read_int_reg[127:96]}};

assign tmp_119_fu_1514_p1 = $signed(tmp_118_reg_1748);

assign tmp_121_fu_1517_p1 = $signed(tmp_120_reg_1758);

assign tmp_267_fu_1253_p1 = data_V_read_int_reg[31:0];

endmodule //compute_layer_0_0_0_s
