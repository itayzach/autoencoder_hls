// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module normalization_layer (
        ap_clk,
        ap_rst,
        data_0_V_read,
        data_1_V_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] data_0_V_read;
input  [31:0] data_1_V_read;
output  [63:0] ap_return;
input   ap_ce;

reg[63:0] ap_return;

reg  signed [31:0] data_1_V_read_4_reg_180;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_state64_pp0_stage0_iter63;
wire    ap_block_state65_pp0_stage0_iter64;
wire    ap_block_state66_pp0_stage0_iter65;
wire    ap_block_state67_pp0_stage0_iter66;
wire    ap_block_state68_pp0_stage0_iter67;
wire    ap_block_state69_pp0_stage0_iter68;
wire    ap_block_state70_pp0_stage0_iter69;
wire    ap_block_state71_pp0_stage0_iter70;
wire    ap_block_state72_pp0_stage0_iter71;
wire    ap_block_state73_pp0_stage0_iter72;
wire    ap_block_state74_pp0_stage0_iter73;
wire    ap_block_state75_pp0_stage0_iter74;
wire    ap_block_state76_pp0_stage0_iter75;
wire    ap_block_state77_pp0_stage0_iter76;
wire    ap_block_state78_pp0_stage0_iter77;
wire    ap_block_state79_pp0_stage0_iter78;
wire    ap_block_state80_pp0_stage0_iter79;
wire    ap_block_state81_pp0_stage0_iter80;
wire    ap_block_state82_pp0_stage0_iter81;
wire    ap_block_state83_pp0_stage0_iter82;
wire    ap_block_state84_pp0_stage0_iter83;
wire    ap_block_state85_pp0_stage0_iter84;
wire    ap_block_state86_pp0_stage0_iter85;
wire    ap_block_state87_pp0_stage0_iter86;
wire    ap_block_state88_pp0_stage0_iter87;
wire    ap_block_state89_pp0_stage0_iter88;
wire    ap_block_state90_pp0_stage0_iter89;
wire    ap_block_state91_pp0_stage0_iter90;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter1_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter2_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter3_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter4_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter5_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter6_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter7_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter8_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter9_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter10_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter11_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter12_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter13_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter14_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter15_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter16_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter17_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter18_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter19_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter20_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter21_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter22_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter23_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter24_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter25_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter26_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter27_reg;
reg  signed [31:0] data_1_V_read_4_reg_180_pp0_iter28_reg;
reg  signed [31:0] data_0_V_read_4_reg_185;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter1_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter2_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter3_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter4_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter5_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter6_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter7_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter8_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter9_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter10_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter11_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter12_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter13_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter14_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter15_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter16_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter17_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter18_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter19_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter20_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter21_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter22_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter23_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter24_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter25_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter26_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter27_reg;
reg  signed [31:0] data_0_V_read_4_reg_185_pp0_iter28_reg;
wire  signed [55:0] OP1_V_3_cast_fu_53_p1;
wire  signed [55:0] OP1_V_3_1_cast_fu_63_p1;
reg   [31:0] data_square_0_V_reg_202;
reg   [31:0] data_square_1_V_reg_207;
wire   [31:0] p_Val2_66_1_fu_93_p2;
reg   [31:0] p_Val2_66_1_reg_212;
wire   [27:0] grp_sqrt_fixed_32_8_s_fu_48_ap_return;
reg   [27:0] sqrt_res_V_reg_217;
wire   [55:0] tmp_s_fu_97_p1;
wire   [31:0] grp_fu_107_p2;
reg   [31:0] tmp_96_reg_238;
wire   [31:0] grp_fu_120_p2;
reg   [31:0] tmp_110_1_reg_243;
reg    grp_sqrt_fixed_32_8_s_fu_48_ap_ce;
wire    ap_block_pp0_stage0;
wire  signed [31:0] OP1_V_3_cast_fu_53_p0;
wire  signed [31:0] grp_fu_57_p0;
wire  signed [31:0] grp_fu_57_p1;
wire  signed [31:0] OP1_V_3_1_cast_fu_63_p0;
wire  signed [31:0] grp_fu_67_p0;
wire  signed [31:0] grp_fu_67_p1;
wire   [55:0] grp_fu_57_p2;
wire   [55:0] grp_fu_67_p2;
wire   [55:0] grp_fu_107_p0;
wire   [28:0] grp_fu_107_p1;
wire   [55:0] grp_fu_120_p0;
wire   [28:0] grp_fu_120_p1;
wire  signed [31:0] div_res_0_V_fu_126_p1;
wire   [25:0] grp_fu_133_p0;
wire  signed [31:0] div_res_1_V_fu_139_p1;
wire   [25:0] grp_fu_146_p0;
wire   [55:0] grp_fu_133_p2;
wire   [55:0] grp_fu_146_p2;
wire   [31:0] tmp_113_1_fu_162_p4;
wire   [31:0] tmp_97_fu_152_p4;
reg    grp_fu_57_ce;
reg    grp_fu_67_ce;
reg    grp_fu_107_ce;
reg    grp_fu_120_ce;
reg    grp_fu_133_ce;
reg    grp_fu_146_ce;
wire   [63:0] res_V_write_assign_fu_172_p3;
reg    ap_ce_reg;
reg   [31:0] data_0_V_read_int_reg;
reg   [31:0] data_1_V_read_int_reg;
reg   [63:0] ap_return_int_reg;

sqrt_fixed_32_8_s grp_sqrt_fixed_32_8_s_fu_48(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(p_Val2_66_1_reg_212),
    .ap_return(grp_sqrt_fixed_32_8_s_fu_48_ap_return),
    .ap_ce(grp_sqrt_fixed_32_8_s_fu_48_ap_ce)
);

encoder_decoder_mrcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mrcU_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_57_p0),
    .din1(grp_fu_57_p1),
    .ce(grp_fu_57_ce),
    .dout(grp_fu_57_p2)
);

encoder_decoder_mrcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mrcU_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_67_p0),
    .din1(grp_fu_67_p1),
    .ce(grp_fu_67_ce),
    .dout(grp_fu_67_p2)
);

encoder_decoder_ssc4 #(
    .ID( 1 ),
    .NUM_STAGE( 60 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 32 ))
encoder_decoder_ssc4_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_107_p0),
    .din1(grp_fu_107_p1),
    .ce(grp_fu_107_ce),
    .dout(grp_fu_107_p2)
);

encoder_decoder_ssc4 #(
    .ID( 1 ),
    .NUM_STAGE( 60 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 32 ))
encoder_decoder_ssc4_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_120_p0),
    .din1(grp_fu_120_p1),
    .ce(grp_fu_120_ce),
    .dout(grp_fu_120_p2)
);

encoder_decoder_mtde #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mtde_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_133_p0),
    .din1(div_res_0_V_fu_126_p1),
    .ce(grp_fu_133_ce),
    .dout(grp_fu_133_p2)
);

encoder_decoder_mtde #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
encoder_decoder_mtde_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_146_p0),
    .din1(div_res_1_V_fu_139_p1),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= res_V_write_assign_fu_172_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_0_V_read_4_reg_185 <= data_0_V_read_int_reg;
        data_0_V_read_4_reg_185_pp0_iter10_reg <= data_0_V_read_4_reg_185_pp0_iter9_reg;
        data_0_V_read_4_reg_185_pp0_iter11_reg <= data_0_V_read_4_reg_185_pp0_iter10_reg;
        data_0_V_read_4_reg_185_pp0_iter12_reg <= data_0_V_read_4_reg_185_pp0_iter11_reg;
        data_0_V_read_4_reg_185_pp0_iter13_reg <= data_0_V_read_4_reg_185_pp0_iter12_reg;
        data_0_V_read_4_reg_185_pp0_iter14_reg <= data_0_V_read_4_reg_185_pp0_iter13_reg;
        data_0_V_read_4_reg_185_pp0_iter15_reg <= data_0_V_read_4_reg_185_pp0_iter14_reg;
        data_0_V_read_4_reg_185_pp0_iter16_reg <= data_0_V_read_4_reg_185_pp0_iter15_reg;
        data_0_V_read_4_reg_185_pp0_iter17_reg <= data_0_V_read_4_reg_185_pp0_iter16_reg;
        data_0_V_read_4_reg_185_pp0_iter18_reg <= data_0_V_read_4_reg_185_pp0_iter17_reg;
        data_0_V_read_4_reg_185_pp0_iter19_reg <= data_0_V_read_4_reg_185_pp0_iter18_reg;
        data_0_V_read_4_reg_185_pp0_iter1_reg <= data_0_V_read_4_reg_185;
        data_0_V_read_4_reg_185_pp0_iter20_reg <= data_0_V_read_4_reg_185_pp0_iter19_reg;
        data_0_V_read_4_reg_185_pp0_iter21_reg <= data_0_V_read_4_reg_185_pp0_iter20_reg;
        data_0_V_read_4_reg_185_pp0_iter22_reg <= data_0_V_read_4_reg_185_pp0_iter21_reg;
        data_0_V_read_4_reg_185_pp0_iter23_reg <= data_0_V_read_4_reg_185_pp0_iter22_reg;
        data_0_V_read_4_reg_185_pp0_iter24_reg <= data_0_V_read_4_reg_185_pp0_iter23_reg;
        data_0_V_read_4_reg_185_pp0_iter25_reg <= data_0_V_read_4_reg_185_pp0_iter24_reg;
        data_0_V_read_4_reg_185_pp0_iter26_reg <= data_0_V_read_4_reg_185_pp0_iter25_reg;
        data_0_V_read_4_reg_185_pp0_iter27_reg <= data_0_V_read_4_reg_185_pp0_iter26_reg;
        data_0_V_read_4_reg_185_pp0_iter28_reg <= data_0_V_read_4_reg_185_pp0_iter27_reg;
        data_0_V_read_4_reg_185_pp0_iter2_reg <= data_0_V_read_4_reg_185_pp0_iter1_reg;
        data_0_V_read_4_reg_185_pp0_iter3_reg <= data_0_V_read_4_reg_185_pp0_iter2_reg;
        data_0_V_read_4_reg_185_pp0_iter4_reg <= data_0_V_read_4_reg_185_pp0_iter3_reg;
        data_0_V_read_4_reg_185_pp0_iter5_reg <= data_0_V_read_4_reg_185_pp0_iter4_reg;
        data_0_V_read_4_reg_185_pp0_iter6_reg <= data_0_V_read_4_reg_185_pp0_iter5_reg;
        data_0_V_read_4_reg_185_pp0_iter7_reg <= data_0_V_read_4_reg_185_pp0_iter6_reg;
        data_0_V_read_4_reg_185_pp0_iter8_reg <= data_0_V_read_4_reg_185_pp0_iter7_reg;
        data_0_V_read_4_reg_185_pp0_iter9_reg <= data_0_V_read_4_reg_185_pp0_iter8_reg;
        data_1_V_read_4_reg_180 <= data_1_V_read_int_reg;
        data_1_V_read_4_reg_180_pp0_iter10_reg <= data_1_V_read_4_reg_180_pp0_iter9_reg;
        data_1_V_read_4_reg_180_pp0_iter11_reg <= data_1_V_read_4_reg_180_pp0_iter10_reg;
        data_1_V_read_4_reg_180_pp0_iter12_reg <= data_1_V_read_4_reg_180_pp0_iter11_reg;
        data_1_V_read_4_reg_180_pp0_iter13_reg <= data_1_V_read_4_reg_180_pp0_iter12_reg;
        data_1_V_read_4_reg_180_pp0_iter14_reg <= data_1_V_read_4_reg_180_pp0_iter13_reg;
        data_1_V_read_4_reg_180_pp0_iter15_reg <= data_1_V_read_4_reg_180_pp0_iter14_reg;
        data_1_V_read_4_reg_180_pp0_iter16_reg <= data_1_V_read_4_reg_180_pp0_iter15_reg;
        data_1_V_read_4_reg_180_pp0_iter17_reg <= data_1_V_read_4_reg_180_pp0_iter16_reg;
        data_1_V_read_4_reg_180_pp0_iter18_reg <= data_1_V_read_4_reg_180_pp0_iter17_reg;
        data_1_V_read_4_reg_180_pp0_iter19_reg <= data_1_V_read_4_reg_180_pp0_iter18_reg;
        data_1_V_read_4_reg_180_pp0_iter1_reg <= data_1_V_read_4_reg_180;
        data_1_V_read_4_reg_180_pp0_iter20_reg <= data_1_V_read_4_reg_180_pp0_iter19_reg;
        data_1_V_read_4_reg_180_pp0_iter21_reg <= data_1_V_read_4_reg_180_pp0_iter20_reg;
        data_1_V_read_4_reg_180_pp0_iter22_reg <= data_1_V_read_4_reg_180_pp0_iter21_reg;
        data_1_V_read_4_reg_180_pp0_iter23_reg <= data_1_V_read_4_reg_180_pp0_iter22_reg;
        data_1_V_read_4_reg_180_pp0_iter24_reg <= data_1_V_read_4_reg_180_pp0_iter23_reg;
        data_1_V_read_4_reg_180_pp0_iter25_reg <= data_1_V_read_4_reg_180_pp0_iter24_reg;
        data_1_V_read_4_reg_180_pp0_iter26_reg <= data_1_V_read_4_reg_180_pp0_iter25_reg;
        data_1_V_read_4_reg_180_pp0_iter27_reg <= data_1_V_read_4_reg_180_pp0_iter26_reg;
        data_1_V_read_4_reg_180_pp0_iter28_reg <= data_1_V_read_4_reg_180_pp0_iter27_reg;
        data_1_V_read_4_reg_180_pp0_iter2_reg <= data_1_V_read_4_reg_180_pp0_iter1_reg;
        data_1_V_read_4_reg_180_pp0_iter3_reg <= data_1_V_read_4_reg_180_pp0_iter2_reg;
        data_1_V_read_4_reg_180_pp0_iter4_reg <= data_1_V_read_4_reg_180_pp0_iter3_reg;
        data_1_V_read_4_reg_180_pp0_iter5_reg <= data_1_V_read_4_reg_180_pp0_iter4_reg;
        data_1_V_read_4_reg_180_pp0_iter6_reg <= data_1_V_read_4_reg_180_pp0_iter5_reg;
        data_1_V_read_4_reg_180_pp0_iter7_reg <= data_1_V_read_4_reg_180_pp0_iter6_reg;
        data_1_V_read_4_reg_180_pp0_iter8_reg <= data_1_V_read_4_reg_180_pp0_iter7_reg;
        data_1_V_read_4_reg_180_pp0_iter9_reg <= data_1_V_read_4_reg_180_pp0_iter8_reg;
        data_square_0_V_reg_202 <= {{grp_fu_57_p2[55:24]}};
        data_square_1_V_reg_207 <= {{grp_fu_67_p2[55:24]}};
        p_Val2_66_1_reg_212 <= p_Val2_66_1_fu_93_p2;
        sqrt_res_V_reg_217 <= grp_sqrt_fixed_32_8_s_fu_48_ap_return;
        tmp_110_1_reg_243 <= grp_fu_120_p2;
        tmp_96_reg_238 <= grp_fu_107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        data_0_V_read_int_reg <= data_0_V_read;
        data_1_V_read_int_reg <= data_1_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = res_V_write_assign_fu_172_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_107_ce = 1'b1;
    end else begin
        grp_fu_107_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_120_ce = 1'b1;
    end else begin
        grp_fu_120_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_133_ce = 1'b1;
    end else begin
        grp_fu_133_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_57_ce = 1'b1;
    end else begin
        grp_fu_57_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_67_ce = 1'b1;
    end else begin
        grp_fu_67_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_sqrt_fixed_32_8_s_fu_48_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_32_8_s_fu_48_ap_ce = 1'b0;
    end
end

assign OP1_V_3_1_cast_fu_63_p0 = data_1_V_read_int_reg;

assign OP1_V_3_1_cast_fu_63_p1 = OP1_V_3_1_cast_fu_63_p0;

assign OP1_V_3_cast_fu_53_p0 = data_0_V_read_int_reg;

assign OP1_V_3_cast_fu_53_p1 = OP1_V_3_cast_fu_53_p0;

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter78 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter79 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter80 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter81 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter82 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter83 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter84 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter85 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter86 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter87 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter88 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter89 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter90 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign div_res_0_V_fu_126_p1 = tmp_96_reg_238[31:0];

assign div_res_1_V_fu_139_p1 = tmp_110_1_reg_243[31:0];

assign grp_fu_107_p0 = {{data_0_V_read_4_reg_185_pp0_iter28_reg}, {24'd0}};

assign grp_fu_107_p1 = tmp_s_fu_97_p1;

assign grp_fu_120_p0 = {{data_1_V_read_4_reg_180_pp0_iter28_reg}, {24'd0}};

assign grp_fu_120_p1 = tmp_s_fu_97_p1;

assign grp_fu_133_p0 = 56'd23726506;

assign grp_fu_146_p0 = 56'd23726506;

assign grp_fu_57_p0 = OP1_V_3_cast_fu_53_p1;

assign grp_fu_57_p1 = OP1_V_3_cast_fu_53_p1;

assign grp_fu_67_p0 = OP1_V_3_1_cast_fu_63_p1;

assign grp_fu_67_p1 = OP1_V_3_1_cast_fu_63_p1;

assign p_Val2_66_1_fu_93_p2 = (data_square_1_V_reg_207 + data_square_0_V_reg_202);

assign res_V_write_assign_fu_172_p3 = {{tmp_113_1_fu_162_p4}, {tmp_97_fu_152_p4}};

assign tmp_113_1_fu_162_p4 = {{grp_fu_146_p2[55:24]}};

assign tmp_97_fu_152_p4 = {{grp_fu_133_p2[55:24]}};

assign tmp_s_fu_97_p1 = sqrt_res_V_reg_217;

endmodule //normalization_layer
