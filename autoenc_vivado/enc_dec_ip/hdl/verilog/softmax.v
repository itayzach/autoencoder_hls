// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_0_V_read;
input  [31:0] data_1_V_read;
input  [31:0] data_2_V_read;
input  [31:0] data_3_V_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] exp_table4_address0;
reg    exp_table4_ce0;
wire   [31:0] exp_table4_q0;
wire   [9:0] exp_table4_address1;
reg    exp_table4_ce1;
wire   [31:0] exp_table4_q1;
wire   [9:0] exp_table4_address2;
reg    exp_table4_ce2;
wire   [31:0] exp_table4_q2;
wire   [9:0] exp_table4_address3;
reg    exp_table4_ce3;
wire   [31:0] exp_table4_q3;
wire   [9:0] exp_table4_address4;
reg    exp_table4_ce4;
wire   [31:0] exp_table4_q4;
wire   [9:0] exp_table4_address5;
reg    exp_table4_ce5;
wire   [31:0] exp_table4_q5;
wire   [9:0] exp_table4_address6;
reg    exp_table4_ce6;
wire   [31:0] exp_table4_q6;
wire   [9:0] exp_table4_address7;
reg    exp_table4_ce7;
wire   [31:0] exp_table4_q7;
wire   [9:0] exp_table4_address8;
reg    exp_table4_ce8;
wire   [31:0] exp_table4_q8;
wire   [9:0] exp_table4_address9;
reg    exp_table4_ce9;
wire   [31:0] exp_table4_q9;
wire   [9:0] exp_table4_address10;
reg    exp_table4_ce10;
wire   [31:0] exp_table4_q10;
wire   [9:0] exp_table4_address11;
reg    exp_table4_ce11;
wire   [31:0] exp_table4_q11;
wire   [9:0] invert_table5_address0;
reg    invert_table5_ce0;
wire   [24:0] invert_table5_q0;
wire   [9:0] invert_table5_address1;
reg    invert_table5_ce1;
wire   [24:0] invert_table5_q1;
wire   [9:0] invert_table5_address2;
reg    invert_table5_ce2;
wire   [24:0] invert_table5_q2;
wire   [9:0] invert_table5_address3;
reg    invert_table5_ce3;
wire   [24:0] invert_table5_q3;
wire   [15:0] p_5_0_1_fu_382_p3;
reg   [15:0] p_5_0_1_reg_2466;
wire   [14:0] tmp_110_fu_390_p1;
reg   [14:0] tmp_110_reg_2471;
wire   [15:0] p_5_0_2_fu_458_p3;
reg   [15:0] p_5_0_2_reg_2476;
wire   [14:0] tmp_116_fu_466_p1;
reg   [14:0] tmp_116_reg_2481;
wire   [15:0] p_5_0_3_fu_534_p3;
reg   [15:0] p_5_0_3_reg_2486;
wire   [14:0] tmp_122_fu_542_p1;
reg   [14:0] tmp_122_reg_2491;
wire   [15:0] p_5_1_fu_606_p3;
reg   [15:0] p_5_1_reg_2496;
wire   [14:0] tmp_128_fu_614_p1;
reg   [14:0] tmp_128_reg_2501;
wire   [15:0] p_5_1_2_fu_678_p3;
reg   [15:0] p_5_1_2_reg_2506;
wire   [14:0] tmp_134_fu_686_p1;
reg   [14:0] tmp_134_reg_2511;
wire   [15:0] p_5_1_3_fu_750_p3;
reg   [15:0] p_5_1_3_reg_2516;
wire   [14:0] tmp_140_fu_758_p1;
reg   [14:0] tmp_140_reg_2521;
wire   [15:0] p_5_2_fu_822_p3;
reg   [15:0] p_5_2_reg_2526;
wire   [14:0] tmp_146_fu_830_p1;
reg   [14:0] tmp_146_reg_2531;
wire   [15:0] p_5_2_1_fu_894_p3;
reg   [15:0] p_5_2_1_reg_2536;
wire   [14:0] tmp_152_fu_902_p1;
reg   [14:0] tmp_152_reg_2541;
wire   [15:0] p_5_2_3_fu_966_p3;
reg   [15:0] p_5_2_3_reg_2546;
wire   [14:0] tmp_158_fu_974_p1;
reg   [14:0] tmp_158_reg_2551;
wire   [15:0] p_5_3_fu_1038_p3;
reg   [15:0] p_5_3_reg_2556;
wire   [14:0] tmp_164_fu_1046_p1;
reg   [14:0] tmp_164_reg_2561;
wire   [15:0] p_5_3_1_fu_1110_p3;
reg   [15:0] p_5_3_1_reg_2566;
wire   [14:0] tmp_170_fu_1118_p1;
reg   [14:0] tmp_170_reg_2571;
wire   [15:0] p_5_3_2_fu_1182_p3;
reg   [15:0] p_5_3_2_reg_2576;
wire   [14:0] tmp_176_fu_1190_p1;
reg   [14:0] tmp_176_reg_2581;
wire   [9:0] index_1_0_1_fu_1240_p3;
reg   [9:0] index_1_0_1_reg_2586;
wire   [9:0] index_1_0_2_fu_1294_p3;
reg   [9:0] index_1_0_2_reg_2591;
wire   [9:0] index_1_0_3_fu_1348_p3;
reg   [9:0] index_1_0_3_reg_2596;
wire   [9:0] index_1_1_fu_1402_p3;
reg   [9:0] index_1_1_reg_2601;
wire   [9:0] index_1_1_2_fu_1456_p3;
reg   [9:0] index_1_1_2_reg_2606;
wire   [9:0] index_1_1_3_fu_1510_p3;
reg   [9:0] index_1_1_3_reg_2611;
wire   [9:0] index_1_2_fu_1564_p3;
reg   [9:0] index_1_2_reg_2616;
wire   [9:0] index_1_2_1_fu_1618_p3;
reg   [9:0] index_1_2_1_reg_2621;
wire   [9:0] index_1_2_3_fu_1672_p3;
reg   [9:0] index_1_2_3_reg_2626;
wire   [9:0] index_1_3_fu_1726_p3;
reg   [9:0] index_1_3_reg_2631;
wire   [9:0] index_1_3_1_fu_1780_p3;
reg   [9:0] index_1_3_1_reg_2636;
wire   [9:0] index_1_3_2_fu_1834_p3;
reg   [9:0] index_1_3_2_reg_2641;
reg   [31:0] exp_table4_load_2_reg_2706;
wire   [31:0] tmp2_fu_1890_p2;
reg   [31:0] tmp2_reg_2711;
reg   [31:0] exp_table4_load_5_reg_2716;
wire   [31:0] tmp5_fu_1896_p2;
reg   [31:0] tmp5_reg_2721;
reg   [31:0] exp_table4_load_8_reg_2726;
wire   [31:0] tmp8_fu_1902_p2;
reg   [31:0] tmp8_reg_2731;
reg   [31:0] exp_table4_load_9_reg_2736;
wire   [31:0] tmp11_fu_1908_p2;
reg   [31:0] tmp11_reg_2741;
wire   [31:0] p_Val2_63_0_3_fu_1919_p2;
reg   [31:0] p_Val2_63_0_3_reg_2746;
wire   [31:0] p_Val2_63_1_3_fu_1929_p2;
reg   [31:0] p_Val2_63_1_3_reg_2751;
wire   [31:0] p_Val2_63_2_3_fu_1939_p2;
reg   [31:0] p_Val2_63_2_3_reg_2756;
wire   [31:0] p_Val2_63_3_3_fu_1949_p2;
reg   [31:0] p_Val2_63_3_3_reg_2761;
wire  signed [16:0] p_Result_cast_fu_1964_p1;
reg  signed [16:0] p_Result_cast_reg_2766;
wire   [0:0] tmp_77_fu_1980_p2;
reg   [0:0] tmp_77_reg_2772;
wire   [16:0] ret_V_s_fu_1986_p2;
reg   [16:0] ret_V_s_reg_2777;
wire  signed [16:0] p_Result_1_cast_fu_2002_p1;
reg  signed [16:0] p_Result_1_cast_reg_2782;
wire   [0:0] tmp_77_1_fu_2018_p2;
reg   [0:0] tmp_77_1_reg_2788;
wire   [16:0] ret_V_19_1_fu_2024_p2;
reg   [16:0] ret_V_19_1_reg_2793;
wire  signed [16:0] p_Result_2_cast_fu_2040_p1;
reg  signed [16:0] p_Result_2_cast_reg_2798;
wire   [0:0] tmp_77_2_fu_2056_p2;
reg   [0:0] tmp_77_2_reg_2804;
wire   [16:0] ret_V_19_2_fu_2062_p2;
reg   [16:0] ret_V_19_2_reg_2809;
wire  signed [16:0] p_Result_3_cast_fu_2078_p1;
reg  signed [16:0] p_Result_3_cast_reg_2814;
wire   [0:0] tmp_77_3_fu_2094_p2;
reg   [0:0] tmp_77_3_reg_2820;
wire   [16:0] ret_V_19_3_fu_2100_p2;
reg   [16:0] ret_V_19_3_reg_2825;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_91_0_1_fu_1842_p1;
wire   [63:0] tmp_91_0_2_fu_1846_p1;
wire   [63:0] tmp_91_0_3_fu_1850_p1;
wire   [63:0] tmp_91_1_fu_1854_p1;
wire   [63:0] tmp_91_1_2_fu_1858_p1;
wire   [63:0] tmp_91_1_3_fu_1862_p1;
wire   [63:0] tmp_91_2_fu_1866_p1;
wire   [63:0] tmp_91_2_1_fu_1870_p1;
wire   [63:0] tmp_91_2_3_fu_1874_p1;
wire   [63:0] tmp_91_3_fu_1878_p1;
wire   [63:0] tmp_91_3_1_fu_1882_p1;
wire   [63:0] tmp_91_3_2_fu_1886_p1;
wire   [63:0] tmp_85_fu_2173_p1;
wire   [63:0] tmp_86_1_fu_2245_p1;
wire   [63:0] tmp_86_2_fu_2317_p1;
wire   [63:0] tmp_86_3_fu_2389_p1;
wire  signed [32:0] tmp_79_0_1_fu_314_p1;
wire  signed [32:0] tmp_80_0_1_fu_318_p1;
wire   [32:0] r_V_0_1_fu_322_p2;
wire   [14:0] tmp_s_fu_328_p4;
wire   [17:0] tmp_108_fu_350_p1;
wire   [23:0] p_Result_84_0_1_fu_354_p3;
wire  signed [15:0] p_Result_82_0_1_ca_fu_338_p1;
wire   [0:0] tmp_88_0_1_fu_362_p2;
wire   [15:0] ret_V_21_0_1_fu_368_p2;
wire   [0:0] tmp_106_fu_342_p3;
wire   [15:0] p_0_1_fu_374_p3;
wire  signed [32:0] tmp_79_0_2_fu_394_p1;
wire   [32:0] r_V_0_2_fu_398_p2;
wire   [14:0] tmp_66_fu_404_p4;
wire   [17:0] tmp_115_fu_426_p1;
wire   [23:0] p_Result_84_0_2_fu_430_p3;
wire  signed [15:0] p_Result_82_0_2_ca_fu_414_p1;
wire   [0:0] tmp_88_0_2_fu_438_p2;
wire   [15:0] ret_V_21_0_2_fu_444_p2;
wire   [0:0] tmp_114_fu_418_p3;
wire   [15:0] p_0_2_fu_450_p3;
wire  signed [32:0] tmp_79_0_3_fu_470_p1;
wire   [32:0] r_V_0_3_fu_474_p2;
wire   [14:0] tmp_69_fu_480_p4;
wire   [17:0] tmp_121_fu_502_p1;
wire   [23:0] p_Result_84_0_3_fu_506_p3;
wire  signed [15:0] p_Result_82_0_3_ca_fu_490_p1;
wire   [0:0] tmp_88_0_3_fu_514_p2;
wire   [15:0] ret_V_21_0_3_fu_520_p2;
wire   [0:0] tmp_120_fu_494_p3;
wire   [15:0] p_0_3_fu_526_p3;
wire   [32:0] r_V_1_fu_546_p2;
wire   [14:0] tmp_72_fu_552_p4;
wire   [17:0] tmp_127_fu_574_p1;
wire   [23:0] p_Result_84_1_fu_578_p3;
wire  signed [15:0] p_Result_82_1_cast_fu_562_p1;
wire   [0:0] tmp_88_1_fu_586_p2;
wire   [15:0] ret_V_21_1_fu_592_p2;
wire   [0:0] tmp_126_fu_566_p3;
wire   [15:0] p_1_fu_598_p3;
wire   [32:0] r_V_1_2_fu_618_p2;
wire   [14:0] tmp_75_fu_624_p4;
wire   [17:0] tmp_133_fu_646_p1;
wire   [23:0] p_Result_84_1_2_fu_650_p3;
wire  signed [15:0] p_Result_82_1_2_ca_fu_634_p1;
wire   [0:0] tmp_88_1_2_fu_658_p2;
wire   [15:0] ret_V_21_1_2_fu_664_p2;
wire   [0:0] tmp_132_fu_638_p3;
wire   [15:0] p_1_2_fu_670_p3;
wire   [32:0] r_V_1_3_fu_690_p2;
wire   [14:0] tmp_76_fu_696_p4;
wire   [17:0] tmp_139_fu_718_p1;
wire   [23:0] p_Result_84_1_3_fu_722_p3;
wire  signed [15:0] p_Result_82_1_3_ca_fu_706_p1;
wire   [0:0] tmp_88_1_3_fu_730_p2;
wire   [15:0] ret_V_21_1_3_fu_736_p2;
wire   [0:0] tmp_138_fu_710_p3;
wire   [15:0] p_1_3_fu_742_p3;
wire   [32:0] r_V_2_fu_762_p2;
wire   [14:0] tmp_78_fu_768_p4;
wire   [17:0] tmp_145_fu_790_p1;
wire   [23:0] p_Result_84_2_fu_794_p3;
wire  signed [15:0] p_Result_82_2_cast_fu_778_p1;
wire   [0:0] tmp_88_2_fu_802_p2;
wire   [15:0] ret_V_21_2_fu_808_p2;
wire   [0:0] tmp_144_fu_782_p3;
wire   [15:0] p_2_fu_814_p3;
wire   [32:0] r_V_2_1_fu_834_p2;
wire   [14:0] tmp_79_fu_840_p4;
wire   [17:0] tmp_151_fu_862_p1;
wire   [23:0] p_Result_84_2_1_fu_866_p3;
wire  signed [15:0] p_Result_82_2_1_ca_fu_850_p1;
wire   [0:0] tmp_88_2_1_fu_874_p2;
wire   [15:0] ret_V_21_2_1_fu_880_p2;
wire   [0:0] tmp_150_fu_854_p3;
wire   [15:0] p_2_1_fu_886_p3;
wire   [32:0] r_V_2_3_fu_906_p2;
wire   [14:0] tmp_80_fu_912_p4;
wire   [17:0] tmp_157_fu_934_p1;
wire   [23:0] p_Result_84_2_3_fu_938_p3;
wire  signed [15:0] p_Result_82_2_3_ca_fu_922_p1;
wire   [0:0] tmp_88_2_3_fu_946_p2;
wire   [15:0] ret_V_21_2_3_fu_952_p2;
wire   [0:0] tmp_156_fu_926_p3;
wire   [15:0] p_2_3_fu_958_p3;
wire   [32:0] r_V_3_fu_978_p2;
wire   [14:0] tmp_81_fu_984_p4;
wire   [17:0] tmp_163_fu_1006_p1;
wire   [23:0] p_Result_84_3_fu_1010_p3;
wire  signed [15:0] p_Result_82_3_cast_fu_994_p1;
wire   [0:0] tmp_88_3_fu_1018_p2;
wire   [15:0] ret_V_21_3_fu_1024_p2;
wire   [0:0] tmp_162_fu_998_p3;
wire   [15:0] p_3_fu_1030_p3;
wire   [32:0] r_V_3_1_fu_1050_p2;
wire   [14:0] tmp_82_fu_1056_p4;
wire   [17:0] tmp_169_fu_1078_p1;
wire   [23:0] p_Result_84_3_1_fu_1082_p3;
wire  signed [15:0] p_Result_82_3_1_ca_fu_1066_p1;
wire   [0:0] tmp_88_3_1_fu_1090_p2;
wire   [15:0] ret_V_21_3_1_fu_1096_p2;
wire   [0:0] tmp_168_fu_1070_p3;
wire   [15:0] p_3_1_48_fu_1102_p3;
wire   [32:0] r_V_3_2_fu_1122_p2;
wire   [14:0] tmp_83_fu_1128_p4;
wire   [17:0] tmp_175_fu_1150_p1;
wire   [23:0] p_Result_84_3_2_fu_1154_p3;
wire  signed [15:0] p_Result_82_3_2_ca_fu_1138_p1;
wire   [0:0] tmp_88_3_2_fu_1162_p2;
wire   [15:0] ret_V_21_3_2_fu_1168_p2;
wire   [0:0] tmp_174_fu_1142_p3;
wire   [15:0] p_3_2_49_fu_1174_p3;
wire   [15:0] index_0_1_fu_1194_p2;
wire   [0:0] tmp_111_fu_1204_p3;
wire   [14:0] index_0_1_cast_fu_1199_p2;
wire   [14:0] p_3_0_1_fu_1212_p3;
wire   [4:0] tmp_113_fu_1224_p4;
wire   [0:0] icmp_fu_1234_p2;
wire   [9:0] tmp_112_fu_1220_p1;
wire   [15:0] index_0_2_fu_1248_p2;
wire   [0:0] tmp_117_fu_1258_p3;
wire   [14:0] index_0_2_cast_fu_1253_p2;
wire   [14:0] p_3_0_2_fu_1266_p3;
wire   [4:0] tmp_119_fu_1278_p4;
wire   [0:0] icmp1_fu_1288_p2;
wire   [9:0] tmp_118_fu_1274_p1;
wire   [15:0] index_0_3_fu_1302_p2;
wire   [0:0] tmp_123_fu_1312_p3;
wire   [14:0] index_0_3_cast_fu_1307_p2;
wire   [14:0] p_3_0_3_fu_1320_p3;
wire   [4:0] tmp_125_fu_1332_p4;
wire   [0:0] icmp2_fu_1342_p2;
wire   [9:0] tmp_124_fu_1328_p1;
wire   [15:0] index_s_fu_1356_p2;
wire   [0:0] tmp_129_fu_1366_p3;
wire   [14:0] index_cast_fu_1361_p2;
wire   [14:0] p_3_1_fu_1374_p3;
wire   [4:0] tmp_131_fu_1386_p4;
wire   [0:0] icmp3_fu_1396_p2;
wire   [9:0] tmp_130_fu_1382_p1;
wire   [15:0] index_115_2_fu_1410_p2;
wire   [0:0] tmp_135_fu_1420_p3;
wire   [14:0] index_115_2_cast_fu_1415_p2;
wire   [14:0] p_3_1_2_fu_1428_p3;
wire   [4:0] tmp_137_fu_1440_p4;
wire   [0:0] icmp4_fu_1450_p2;
wire   [9:0] tmp_136_fu_1436_p1;
wire   [15:0] index_115_3_fu_1464_p2;
wire   [0:0] tmp_141_fu_1474_p3;
wire   [14:0] index_115_3_cast_fu_1469_p2;
wire   [14:0] p_3_1_3_fu_1482_p3;
wire   [4:0] tmp_143_fu_1494_p4;
wire   [0:0] icmp5_fu_1504_p2;
wire   [9:0] tmp_142_fu_1490_p1;
wire   [15:0] index_2_fu_1518_p2;
wire   [0:0] tmp_147_fu_1528_p3;
wire   [14:0] index_2_cast_fu_1523_p2;
wire   [14:0] p_3_2_fu_1536_p3;
wire   [4:0] tmp_149_fu_1548_p4;
wire   [0:0] icmp6_fu_1558_p2;
wire   [9:0] tmp_148_fu_1544_p1;
wire   [15:0] index_2_1_fu_1572_p2;
wire   [0:0] tmp_153_fu_1582_p3;
wire   [14:0] index_2_1_cast_fu_1577_p2;
wire   [14:0] p_3_2_1_fu_1590_p3;
wire   [4:0] tmp_155_fu_1602_p4;
wire   [0:0] icmp7_fu_1612_p2;
wire   [9:0] tmp_154_fu_1598_p1;
wire   [15:0] index_2_3_fu_1626_p2;
wire   [0:0] tmp_159_fu_1636_p3;
wire   [14:0] index_2_3_cast_fu_1631_p2;
wire   [14:0] p_3_2_3_fu_1644_p3;
wire   [4:0] tmp_161_fu_1656_p4;
wire   [0:0] icmp8_fu_1666_p2;
wire   [9:0] tmp_160_fu_1652_p1;
wire   [15:0] index_3_fu_1680_p2;
wire   [0:0] tmp_165_fu_1690_p3;
wire   [14:0] index_3_cast_fu_1685_p2;
wire   [14:0] p_3_3_fu_1698_p3;
wire   [4:0] tmp_167_fu_1710_p4;
wire   [0:0] icmp9_fu_1720_p2;
wire   [9:0] tmp_166_fu_1706_p1;
wire   [15:0] index_3_1_fu_1734_p2;
wire   [0:0] tmp_171_fu_1744_p3;
wire   [14:0] index_3_1_cast_fu_1739_p2;
wire   [14:0] p_3_3_1_fu_1752_p3;
wire   [4:0] tmp_173_fu_1764_p4;
wire   [0:0] icmp10_fu_1774_p2;
wire   [9:0] tmp_172_fu_1760_p1;
wire   [15:0] index_3_2_fu_1788_p2;
wire   [0:0] tmp_177_fu_1798_p3;
wire   [14:0] index_3_2_cast_fu_1793_p2;
wire   [14:0] p_3_3_2_fu_1806_p3;
wire   [4:0] tmp_179_fu_1818_p4;
wire   [0:0] icmp11_fu_1828_p2;
wire   [9:0] tmp_178_fu_1814_p1;
wire   [31:0] tmp3_fu_1914_p2;
wire   [31:0] tmp6_fu_1924_p2;
wire   [31:0] tmp9_fu_1934_p2;
wire   [31:0] tmp12_fu_1944_p2;
wire   [15:0] tmp_84_fu_1954_p4;
wire   [15:0] tmp_181_fu_1968_p1;
wire   [19:0] p_Result_4_fu_1972_p3;
wire   [15:0] tmp_86_fu_1992_p4;
wire   [15:0] tmp_187_fu_2006_p1;
wire   [19:0] p_Result_81_1_fu_2010_p3;
wire   [15:0] tmp_87_fu_2030_p4;
wire   [15:0] tmp_193_fu_2044_p1;
wire   [19:0] p_Result_81_2_fu_2048_p3;
wire   [15:0] tmp_88_fu_2068_p4;
wire   [15:0] tmp_199_fu_2082_p1;
wire   [19:0] p_Result_81_3_fu_2086_p3;
wire   [0:0] tmp_180_fu_2106_p3;
wire   [16:0] p_1_50_fu_2113_p3;
wire   [16:0] p_4_fu_2118_p3;
wire   [0:0] tmp_183_fu_2129_p3;
wire   [15:0] tmp_182_fu_2125_p1;
wire   [15:0] p_2_51_fu_2137_p3;
wire   [5:0] tmp_185_fu_2149_p4;
wire   [0:0] icmp12_fu_2159_p2;
wire   [9:0] tmp_184_fu_2145_p1;
wire   [9:0] exp_res_index_1_fu_2165_p3;
wire   [0:0] tmp_186_fu_2178_p3;
wire   [16:0] p_1_1_fu_2185_p3;
wire   [16:0] p_4_1_fu_2190_p3;
wire   [0:0] tmp_189_fu_2201_p3;
wire   [15:0] tmp_188_fu_2197_p1;
wire   [15:0] p_2_1_52_fu_2209_p3;
wire   [5:0] tmp_191_fu_2221_p4;
wire   [0:0] icmp13_fu_2231_p2;
wire   [9:0] tmp_190_fu_2217_p1;
wire   [9:0] exp_res_index_1_1_fu_2237_p3;
wire   [0:0] tmp_192_fu_2250_p3;
wire   [16:0] p_1_2_53_fu_2257_p3;
wire   [16:0] p_4_2_fu_2262_p3;
wire   [0:0] tmp_195_fu_2273_p3;
wire   [15:0] tmp_194_fu_2269_p1;
wire   [15:0] p_2_2_fu_2281_p3;
wire   [5:0] tmp_197_fu_2293_p4;
wire   [0:0] icmp14_fu_2303_p2;
wire   [9:0] tmp_196_fu_2289_p1;
wire   [9:0] exp_res_index_1_2_fu_2309_p3;
wire   [0:0] tmp_198_fu_2322_p3;
wire   [16:0] p_1_3_54_fu_2329_p3;
wire   [16:0] p_4_3_fu_2334_p3;
wire   [0:0] tmp_201_fu_2345_p3;
wire   [15:0] tmp_200_fu_2341_p1;
wire   [15:0] p_2_3_55_fu_2353_p3;
wire   [5:0] tmp_203_fu_2365_p4;
wire   [0:0] icmp15_fu_2375_p2;
wire   [9:0] tmp_202_fu_2361_p1;
wire   [9:0] exp_res_index_1_3_fu_2381_p3;
wire   [28:0] res_0_V_write_assig_fu_2394_p3;
wire   [28:0] res_1_V_write_assig_fu_2406_p3;
wire   [28:0] res_2_V_write_assig_fu_2418_p3;
wire   [28:0] res_3_V_write_assig_fu_2430_p3;
wire   [31:0] res_0_V_write_assig_1_fu_2402_p1;
wire   [31:0] res_1_V_write_assig_1_fu_2414_p1;
wire   [31:0] res_2_V_write_assig_1_fu_2426_p1;
wire   [31:0] res_3_V_write_assig_1_fu_2438_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

softmax_exp_table4 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table4_address0),
    .ce0(exp_table4_ce0),
    .q0(exp_table4_q0),
    .address1(exp_table4_address1),
    .ce1(exp_table4_ce1),
    .q1(exp_table4_q1),
    .address2(exp_table4_address2),
    .ce2(exp_table4_ce2),
    .q2(exp_table4_q2),
    .address3(exp_table4_address3),
    .ce3(exp_table4_ce3),
    .q3(exp_table4_q3),
    .address4(exp_table4_address4),
    .ce4(exp_table4_ce4),
    .q4(exp_table4_q4),
    .address5(exp_table4_address5),
    .ce5(exp_table4_ce5),
    .q5(exp_table4_q5),
    .address6(exp_table4_address6),
    .ce6(exp_table4_ce6),
    .q6(exp_table4_q6),
    .address7(exp_table4_address7),
    .ce7(exp_table4_ce7),
    .q7(exp_table4_q7),
    .address8(exp_table4_address8),
    .ce8(exp_table4_ce8),
    .q8(exp_table4_q8),
    .address9(exp_table4_address9),
    .ce9(exp_table4_ce9),
    .q9(exp_table4_q9),
    .address10(exp_table4_address10),
    .ce10(exp_table4_ce10),
    .q10(exp_table4_q10),
    .address11(exp_table4_address11),
    .ce11(exp_table4_ce11),
    .q11(exp_table4_q11)
);

softmax_invert_taAem #(
    .DataWidth( 25 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table5_address0),
    .ce0(invert_table5_ce0),
    .q0(invert_table5_q0),
    .address1(invert_table5_address1),
    .ce1(invert_table5_ce1),
    .q1(invert_table5_q1),
    .address2(invert_table5_address2),
    .ce2(invert_table5_ce2),
    .q2(invert_table5_q2),
    .address3(invert_table5_address3),
    .ce3(invert_table5_ce3),
    .q3(invert_table5_q3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        exp_table4_load_2_reg_2706 <= exp_table4_q2;
        exp_table4_load_5_reg_2716 <= exp_table4_q5;
        exp_table4_load_8_reg_2726 <= exp_table4_q8;
        exp_table4_load_9_reg_2736 <= exp_table4_q9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        index_1_0_1_reg_2586 <= index_1_0_1_fu_1240_p3;
        index_1_0_2_reg_2591 <= index_1_0_2_fu_1294_p3;
        index_1_0_3_reg_2596 <= index_1_0_3_fu_1348_p3;
        index_1_1_2_reg_2606 <= index_1_1_2_fu_1456_p3;
        index_1_1_3_reg_2611 <= index_1_1_3_fu_1510_p3;
        index_1_1_reg_2601 <= index_1_1_fu_1402_p3;
        index_1_2_1_reg_2621 <= index_1_2_1_fu_1618_p3;
        index_1_2_3_reg_2626 <= index_1_2_3_fu_1672_p3;
        index_1_2_reg_2616 <= index_1_2_fu_1564_p3;
        index_1_3_1_reg_2636 <= index_1_3_1_fu_1780_p3;
        index_1_3_2_reg_2641 <= index_1_3_2_fu_1834_p3;
        index_1_3_reg_2631 <= index_1_3_fu_1726_p3;
        p_5_0_1_reg_2466 <= p_5_0_1_fu_382_p3;
        p_5_0_2_reg_2476 <= p_5_0_2_fu_458_p3;
        p_5_0_3_reg_2486 <= p_5_0_3_fu_534_p3;
        p_5_1_2_reg_2506 <= p_5_1_2_fu_678_p3;
        p_5_1_3_reg_2516 <= p_5_1_3_fu_750_p3;
        p_5_1_reg_2496 <= p_5_1_fu_606_p3;
        p_5_2_1_reg_2536 <= p_5_2_1_fu_894_p3;
        p_5_2_3_reg_2546 <= p_5_2_3_fu_966_p3;
        p_5_2_reg_2526 <= p_5_2_fu_822_p3;
        p_5_3_1_reg_2566 <= p_5_3_1_fu_1110_p3;
        p_5_3_2_reg_2576 <= p_5_3_2_fu_1182_p3;
        p_5_3_reg_2556 <= p_5_3_fu_1038_p3;
        tmp_110_reg_2471 <= tmp_110_fu_390_p1;
        tmp_116_reg_2481 <= tmp_116_fu_466_p1;
        tmp_122_reg_2491 <= tmp_122_fu_542_p1;
        tmp_128_reg_2501 <= tmp_128_fu_614_p1;
        tmp_134_reg_2511 <= tmp_134_fu_686_p1;
        tmp_140_reg_2521 <= tmp_140_fu_758_p1;
        tmp_146_reg_2531 <= tmp_146_fu_830_p1;
        tmp_152_reg_2541 <= tmp_152_fu_902_p1;
        tmp_158_reg_2551 <= tmp_158_fu_974_p1;
        tmp_164_reg_2561 <= tmp_164_fu_1046_p1;
        tmp_170_reg_2571 <= tmp_170_fu_1118_p1;
        tmp_176_reg_2581 <= tmp_176_fu_1190_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        p_Result_1_cast_reg_2782 <= p_Result_1_cast_fu_2002_p1;
        p_Result_2_cast_reg_2798 <= p_Result_2_cast_fu_2040_p1;
        p_Result_3_cast_reg_2814 <= p_Result_3_cast_fu_2078_p1;
        p_Result_cast_reg_2766 <= p_Result_cast_fu_1964_p1;
        p_Val2_63_0_3_reg_2746 <= p_Val2_63_0_3_fu_1919_p2;
        p_Val2_63_1_3_reg_2751 <= p_Val2_63_1_3_fu_1929_p2;
        p_Val2_63_2_3_reg_2756 <= p_Val2_63_2_3_fu_1939_p2;
        p_Val2_63_3_3_reg_2761 <= p_Val2_63_3_3_fu_1949_p2;
        ret_V_19_1_reg_2793 <= ret_V_19_1_fu_2024_p2;
        ret_V_19_2_reg_2809 <= ret_V_19_2_fu_2062_p2;
        ret_V_19_3_reg_2825 <= ret_V_19_3_fu_2100_p2;
        ret_V_s_reg_2777 <= ret_V_s_fu_1986_p2;
        tmp11_reg_2741 <= tmp11_fu_1908_p2;
        tmp2_reg_2711 <= tmp2_fu_1890_p2;
        tmp5_reg_2721 <= tmp5_fu_1896_p2;
        tmp8_reg_2731 <= tmp8_fu_1902_p2;
        tmp_77_1_reg_2788 <= tmp_77_1_fu_2018_p2;
        tmp_77_2_reg_2804 <= tmp_77_2_fu_2056_p2;
        tmp_77_3_reg_2820 <= tmp_77_3_fu_2094_p2;
        tmp_77_reg_2772 <= tmp_77_fu_1980_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce0 = 1'b1;
    end else begin
        exp_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce1 = 1'b1;
    end else begin
        exp_table4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce10 = 1'b1;
    end else begin
        exp_table4_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce11 = 1'b1;
    end else begin
        exp_table4_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce2 = 1'b1;
    end else begin
        exp_table4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce3 = 1'b1;
    end else begin
        exp_table4_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce4 = 1'b1;
    end else begin
        exp_table4_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce5 = 1'b1;
    end else begin
        exp_table4_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce6 = 1'b1;
    end else begin
        exp_table4_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce7 = 1'b1;
    end else begin
        exp_table4_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce8 = 1'b1;
    end else begin
        exp_table4_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table4_ce9 = 1'b1;
    end else begin
        exp_table4_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        invert_table5_ce0 = 1'b1;
    end else begin
        invert_table5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        invert_table5_ce1 = 1'b1;
    end else begin
        invert_table5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        invert_table5_ce2 = 1'b1;
    end else begin
        invert_table5_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        invert_table5_ce3 = 1'b1;
    end else begin
        invert_table5_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = res_0_V_write_assig_1_fu_2402_p1;

assign ap_return_1 = res_1_V_write_assig_1_fu_2414_p1;

assign ap_return_2 = res_2_V_write_assig_1_fu_2426_p1;

assign ap_return_3 = res_3_V_write_assig_1_fu_2438_p1;

assign exp_res_index_1_1_fu_2237_p3 = ((icmp13_fu_2231_p2[0:0] === 1'b1) ? 10'd1023 : tmp_190_fu_2217_p1);

assign exp_res_index_1_2_fu_2309_p3 = ((icmp14_fu_2303_p2[0:0] === 1'b1) ? 10'd1023 : tmp_196_fu_2289_p1);

assign exp_res_index_1_3_fu_2381_p3 = ((icmp15_fu_2375_p2[0:0] === 1'b1) ? 10'd1023 : tmp_202_fu_2361_p1);

assign exp_res_index_1_fu_2165_p3 = ((icmp12_fu_2159_p2[0:0] === 1'b1) ? 10'd1023 : tmp_184_fu_2145_p1);

assign exp_table4_address0 = tmp_91_0_1_fu_1842_p1;

assign exp_table4_address1 = tmp_91_0_2_fu_1846_p1;

assign exp_table4_address10 = tmp_91_3_1_fu_1882_p1;

assign exp_table4_address11 = tmp_91_3_2_fu_1886_p1;

assign exp_table4_address2 = tmp_91_0_3_fu_1850_p1;

assign exp_table4_address3 = tmp_91_1_fu_1854_p1;

assign exp_table4_address4 = tmp_91_1_2_fu_1858_p1;

assign exp_table4_address5 = tmp_91_1_3_fu_1862_p1;

assign exp_table4_address6 = tmp_91_2_fu_1866_p1;

assign exp_table4_address7 = tmp_91_2_1_fu_1870_p1;

assign exp_table4_address8 = tmp_91_2_3_fu_1874_p1;

assign exp_table4_address9 = tmp_91_3_fu_1878_p1;

assign icmp10_fu_1774_p2 = ((tmp_173_fu_1764_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp11_fu_1828_p2 = ((tmp_179_fu_1818_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp12_fu_2159_p2 = ((tmp_185_fu_2149_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp13_fu_2231_p2 = ((tmp_191_fu_2221_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp14_fu_2303_p2 = ((tmp_197_fu_2293_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp15_fu_2375_p2 = ((tmp_203_fu_2365_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp1_fu_1288_p2 = ((tmp_119_fu_1278_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_1342_p2 = ((tmp_125_fu_1332_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_1396_p2 = ((tmp_131_fu_1386_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_1450_p2 = ((tmp_137_fu_1440_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_1504_p2 = ((tmp_143_fu_1494_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_1558_p2 = ((tmp_149_fu_1548_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_1612_p2 = ((tmp_155_fu_1602_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp8_fu_1666_p2 = ((tmp_161_fu_1656_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_1720_p2 = ((tmp_167_fu_1710_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1234_p2 = ((tmp_113_fu_1224_p4 != 5'd0) ? 1'b1 : 1'b0);

assign index_0_1_cast_fu_1199_p2 = (15'd512 + tmp_110_reg_2471);

assign index_0_1_fu_1194_p2 = (16'd512 + p_5_0_1_reg_2466);

assign index_0_2_cast_fu_1253_p2 = (15'd512 + tmp_116_reg_2481);

assign index_0_2_fu_1248_p2 = (16'd512 + p_5_0_2_reg_2476);

assign index_0_3_cast_fu_1307_p2 = (15'd512 + tmp_122_reg_2491);

assign index_0_3_fu_1302_p2 = (16'd512 + p_5_0_3_reg_2486);

assign index_115_2_cast_fu_1415_p2 = (15'd512 + tmp_134_reg_2511);

assign index_115_2_fu_1410_p2 = (16'd512 + p_5_1_2_reg_2506);

assign index_115_3_cast_fu_1469_p2 = (15'd512 + tmp_140_reg_2521);

assign index_115_3_fu_1464_p2 = (16'd512 + p_5_1_3_reg_2516);

assign index_1_0_1_fu_1240_p3 = ((icmp_fu_1234_p2[0:0] === 1'b1) ? 10'd1023 : tmp_112_fu_1220_p1);

assign index_1_0_2_fu_1294_p3 = ((icmp1_fu_1288_p2[0:0] === 1'b1) ? 10'd1023 : tmp_118_fu_1274_p1);

assign index_1_0_3_fu_1348_p3 = ((icmp2_fu_1342_p2[0:0] === 1'b1) ? 10'd1023 : tmp_124_fu_1328_p1);

assign index_1_1_2_fu_1456_p3 = ((icmp4_fu_1450_p2[0:0] === 1'b1) ? 10'd1023 : tmp_136_fu_1436_p1);

assign index_1_1_3_fu_1510_p3 = ((icmp5_fu_1504_p2[0:0] === 1'b1) ? 10'd1023 : tmp_142_fu_1490_p1);

assign index_1_1_fu_1402_p3 = ((icmp3_fu_1396_p2[0:0] === 1'b1) ? 10'd1023 : tmp_130_fu_1382_p1);

assign index_1_2_1_fu_1618_p3 = ((icmp7_fu_1612_p2[0:0] === 1'b1) ? 10'd1023 : tmp_154_fu_1598_p1);

assign index_1_2_3_fu_1672_p3 = ((icmp8_fu_1666_p2[0:0] === 1'b1) ? 10'd1023 : tmp_160_fu_1652_p1);

assign index_1_2_fu_1564_p3 = ((icmp6_fu_1558_p2[0:0] === 1'b1) ? 10'd1023 : tmp_148_fu_1544_p1);

assign index_1_3_1_fu_1780_p3 = ((icmp10_fu_1774_p2[0:0] === 1'b1) ? 10'd1023 : tmp_172_fu_1760_p1);

assign index_1_3_2_fu_1834_p3 = ((icmp11_fu_1828_p2[0:0] === 1'b1) ? 10'd1023 : tmp_178_fu_1814_p1);

assign index_1_3_fu_1726_p3 = ((icmp9_fu_1720_p2[0:0] === 1'b1) ? 10'd1023 : tmp_166_fu_1706_p1);

assign index_2_1_cast_fu_1577_p2 = (15'd512 + tmp_152_reg_2541);

assign index_2_1_fu_1572_p2 = (16'd512 + p_5_2_1_reg_2536);

assign index_2_3_cast_fu_1631_p2 = (15'd512 + tmp_158_reg_2551);

assign index_2_3_fu_1626_p2 = (16'd512 + p_5_2_3_reg_2546);

assign index_2_cast_fu_1523_p2 = (15'd512 + tmp_146_reg_2531);

assign index_2_fu_1518_p2 = (16'd512 + p_5_2_reg_2526);

assign index_3_1_cast_fu_1739_p2 = (15'd512 + tmp_170_reg_2571);

assign index_3_1_fu_1734_p2 = (16'd512 + p_5_3_1_reg_2566);

assign index_3_2_cast_fu_1793_p2 = (15'd512 + tmp_176_reg_2581);

assign index_3_2_fu_1788_p2 = (16'd512 + p_5_3_2_reg_2576);

assign index_3_cast_fu_1685_p2 = (15'd512 + tmp_164_reg_2561);

assign index_3_fu_1680_p2 = (16'd512 + p_5_3_reg_2556);

assign index_cast_fu_1361_p2 = (15'd512 + tmp_128_reg_2501);

assign index_s_fu_1356_p2 = (16'd512 + p_5_1_reg_2496);

assign invert_table5_address0 = tmp_85_fu_2173_p1;

assign invert_table5_address1 = tmp_86_1_fu_2245_p1;

assign invert_table5_address2 = tmp_86_2_fu_2317_p1;

assign invert_table5_address3 = tmp_86_3_fu_2389_p1;

assign p_0_1_fu_374_p3 = ((tmp_88_0_1_fu_362_p2[0:0] === 1'b1) ? p_Result_82_0_1_ca_fu_338_p1 : ret_V_21_0_1_fu_368_p2);

assign p_0_2_fu_450_p3 = ((tmp_88_0_2_fu_438_p2[0:0] === 1'b1) ? p_Result_82_0_2_ca_fu_414_p1 : ret_V_21_0_2_fu_444_p2);

assign p_0_3_fu_526_p3 = ((tmp_88_0_3_fu_514_p2[0:0] === 1'b1) ? p_Result_82_0_3_ca_fu_490_p1 : ret_V_21_0_3_fu_520_p2);

assign p_1_1_fu_2185_p3 = ((tmp_77_1_reg_2788[0:0] === 1'b1) ? p_Result_1_cast_reg_2782 : ret_V_19_1_reg_2793);

assign p_1_2_53_fu_2257_p3 = ((tmp_77_2_reg_2804[0:0] === 1'b1) ? p_Result_2_cast_reg_2798 : ret_V_19_2_reg_2809);

assign p_1_2_fu_670_p3 = ((tmp_88_1_2_fu_658_p2[0:0] === 1'b1) ? p_Result_82_1_2_ca_fu_634_p1 : ret_V_21_1_2_fu_664_p2);

assign p_1_3_54_fu_2329_p3 = ((tmp_77_3_reg_2820[0:0] === 1'b1) ? p_Result_3_cast_reg_2814 : ret_V_19_3_reg_2825);

assign p_1_3_fu_742_p3 = ((tmp_88_1_3_fu_730_p2[0:0] === 1'b1) ? p_Result_82_1_3_ca_fu_706_p1 : ret_V_21_1_3_fu_736_p2);

assign p_1_50_fu_2113_p3 = ((tmp_77_reg_2772[0:0] === 1'b1) ? p_Result_cast_reg_2766 : ret_V_s_reg_2777);

assign p_1_fu_598_p3 = ((tmp_88_1_fu_586_p2[0:0] === 1'b1) ? p_Result_82_1_cast_fu_562_p1 : ret_V_21_1_fu_592_p2);

assign p_2_1_52_fu_2209_p3 = ((tmp_189_fu_2201_p3[0:0] === 1'b1) ? 16'd0 : tmp_188_fu_2197_p1);

assign p_2_1_fu_886_p3 = ((tmp_88_2_1_fu_874_p2[0:0] === 1'b1) ? p_Result_82_2_1_ca_fu_850_p1 : ret_V_21_2_1_fu_880_p2);

assign p_2_2_fu_2281_p3 = ((tmp_195_fu_2273_p3[0:0] === 1'b1) ? 16'd0 : tmp_194_fu_2269_p1);

assign p_2_3_55_fu_2353_p3 = ((tmp_201_fu_2345_p3[0:0] === 1'b1) ? 16'd0 : tmp_200_fu_2341_p1);

assign p_2_3_fu_958_p3 = ((tmp_88_2_3_fu_946_p2[0:0] === 1'b1) ? p_Result_82_2_3_ca_fu_922_p1 : ret_V_21_2_3_fu_952_p2);

assign p_2_51_fu_2137_p3 = ((tmp_183_fu_2129_p3[0:0] === 1'b1) ? 16'd0 : tmp_182_fu_2125_p1);

assign p_2_fu_814_p3 = ((tmp_88_2_fu_802_p2[0:0] === 1'b1) ? p_Result_82_2_cast_fu_778_p1 : ret_V_21_2_fu_808_p2);

assign p_3_0_1_fu_1212_p3 = ((tmp_111_fu_1204_p3[0:0] === 1'b1) ? 15'd0 : index_0_1_cast_fu_1199_p2);

assign p_3_0_2_fu_1266_p3 = ((tmp_117_fu_1258_p3[0:0] === 1'b1) ? 15'd0 : index_0_2_cast_fu_1253_p2);

assign p_3_0_3_fu_1320_p3 = ((tmp_123_fu_1312_p3[0:0] === 1'b1) ? 15'd0 : index_0_3_cast_fu_1307_p2);

assign p_3_1_2_fu_1428_p3 = ((tmp_135_fu_1420_p3[0:0] === 1'b1) ? 15'd0 : index_115_2_cast_fu_1415_p2);

assign p_3_1_3_fu_1482_p3 = ((tmp_141_fu_1474_p3[0:0] === 1'b1) ? 15'd0 : index_115_3_cast_fu_1469_p2);

assign p_3_1_48_fu_1102_p3 = ((tmp_88_3_1_fu_1090_p2[0:0] === 1'b1) ? p_Result_82_3_1_ca_fu_1066_p1 : ret_V_21_3_1_fu_1096_p2);

assign p_3_1_fu_1374_p3 = ((tmp_129_fu_1366_p3[0:0] === 1'b1) ? 15'd0 : index_cast_fu_1361_p2);

assign p_3_2_1_fu_1590_p3 = ((tmp_153_fu_1582_p3[0:0] === 1'b1) ? 15'd0 : index_2_1_cast_fu_1577_p2);

assign p_3_2_3_fu_1644_p3 = ((tmp_159_fu_1636_p3[0:0] === 1'b1) ? 15'd0 : index_2_3_cast_fu_1631_p2);

assign p_3_2_49_fu_1174_p3 = ((tmp_88_3_2_fu_1162_p2[0:0] === 1'b1) ? p_Result_82_3_2_ca_fu_1138_p1 : ret_V_21_3_2_fu_1168_p2);

assign p_3_2_fu_1536_p3 = ((tmp_147_fu_1528_p3[0:0] === 1'b1) ? 15'd0 : index_2_cast_fu_1523_p2);

assign p_3_3_1_fu_1752_p3 = ((tmp_171_fu_1744_p3[0:0] === 1'b1) ? 15'd0 : index_3_1_cast_fu_1739_p2);

assign p_3_3_2_fu_1806_p3 = ((tmp_177_fu_1798_p3[0:0] === 1'b1) ? 15'd0 : index_3_2_cast_fu_1793_p2);

assign p_3_3_fu_1698_p3 = ((tmp_165_fu_1690_p3[0:0] === 1'b1) ? 15'd0 : index_3_cast_fu_1685_p2);

assign p_3_fu_1030_p3 = ((tmp_88_3_fu_1018_p2[0:0] === 1'b1) ? p_Result_82_3_cast_fu_994_p1 : ret_V_21_3_fu_1024_p2);

assign p_4_1_fu_2190_p3 = ((tmp_186_fu_2178_p3[0:0] === 1'b1) ? p_1_1_fu_2185_p3 : p_Result_1_cast_reg_2782);

assign p_4_2_fu_2262_p3 = ((tmp_192_fu_2250_p3[0:0] === 1'b1) ? p_1_2_53_fu_2257_p3 : p_Result_2_cast_reg_2798);

assign p_4_3_fu_2334_p3 = ((tmp_198_fu_2322_p3[0:0] === 1'b1) ? p_1_3_54_fu_2329_p3 : p_Result_3_cast_reg_2814);

assign p_4_fu_2118_p3 = ((tmp_180_fu_2106_p3[0:0] === 1'b1) ? p_1_50_fu_2113_p3 : p_Result_cast_reg_2766);

assign p_5_0_1_fu_382_p3 = ((tmp_106_fu_342_p3[0:0] === 1'b1) ? p_0_1_fu_374_p3 : p_Result_82_0_1_ca_fu_338_p1);

assign p_5_0_2_fu_458_p3 = ((tmp_114_fu_418_p3[0:0] === 1'b1) ? p_0_2_fu_450_p3 : p_Result_82_0_2_ca_fu_414_p1);

assign p_5_0_3_fu_534_p3 = ((tmp_120_fu_494_p3[0:0] === 1'b1) ? p_0_3_fu_526_p3 : p_Result_82_0_3_ca_fu_490_p1);

assign p_5_1_2_fu_678_p3 = ((tmp_132_fu_638_p3[0:0] === 1'b1) ? p_1_2_fu_670_p3 : p_Result_82_1_2_ca_fu_634_p1);

assign p_5_1_3_fu_750_p3 = ((tmp_138_fu_710_p3[0:0] === 1'b1) ? p_1_3_fu_742_p3 : p_Result_82_1_3_ca_fu_706_p1);

assign p_5_1_fu_606_p3 = ((tmp_126_fu_566_p3[0:0] === 1'b1) ? p_1_fu_598_p3 : p_Result_82_1_cast_fu_562_p1);

assign p_5_2_1_fu_894_p3 = ((tmp_150_fu_854_p3[0:0] === 1'b1) ? p_2_1_fu_886_p3 : p_Result_82_2_1_ca_fu_850_p1);

assign p_5_2_3_fu_966_p3 = ((tmp_156_fu_926_p3[0:0] === 1'b1) ? p_2_3_fu_958_p3 : p_Result_82_2_3_ca_fu_922_p1);

assign p_5_2_fu_822_p3 = ((tmp_144_fu_782_p3[0:0] === 1'b1) ? p_2_fu_814_p3 : p_Result_82_2_cast_fu_778_p1);

assign p_5_3_1_fu_1110_p3 = ((tmp_168_fu_1070_p3[0:0] === 1'b1) ? p_3_1_48_fu_1102_p3 : p_Result_82_3_1_ca_fu_1066_p1);

assign p_5_3_2_fu_1182_p3 = ((tmp_174_fu_1142_p3[0:0] === 1'b1) ? p_3_2_49_fu_1174_p3 : p_Result_82_3_2_ca_fu_1138_p1);

assign p_5_3_fu_1038_p3 = ((tmp_162_fu_998_p3[0:0] === 1'b1) ? p_3_fu_1030_p3 : p_Result_82_3_cast_fu_994_p1);

assign p_Result_1_cast_fu_2002_p1 = $signed(tmp_86_fu_1992_p4);

assign p_Result_2_cast_fu_2040_p1 = $signed(tmp_87_fu_2030_p4);

assign p_Result_3_cast_fu_2078_p1 = $signed(tmp_88_fu_2068_p4);

assign p_Result_4_fu_1972_p3 = {{tmp_181_fu_1968_p1}, {4'd0}};

assign p_Result_81_1_fu_2010_p3 = {{tmp_187_fu_2006_p1}, {4'd0}};

assign p_Result_81_2_fu_2048_p3 = {{tmp_193_fu_2044_p1}, {4'd0}};

assign p_Result_81_3_fu_2086_p3 = {{tmp_199_fu_2082_p1}, {4'd0}};

assign p_Result_82_0_1_ca_fu_338_p1 = $signed(tmp_s_fu_328_p4);

assign p_Result_82_0_2_ca_fu_414_p1 = $signed(tmp_66_fu_404_p4);

assign p_Result_82_0_3_ca_fu_490_p1 = $signed(tmp_69_fu_480_p4);

assign p_Result_82_1_2_ca_fu_634_p1 = $signed(tmp_75_fu_624_p4);

assign p_Result_82_1_3_ca_fu_706_p1 = $signed(tmp_76_fu_696_p4);

assign p_Result_82_1_cast_fu_562_p1 = $signed(tmp_72_fu_552_p4);

assign p_Result_82_2_1_ca_fu_850_p1 = $signed(tmp_79_fu_840_p4);

assign p_Result_82_2_3_ca_fu_922_p1 = $signed(tmp_80_fu_912_p4);

assign p_Result_82_2_cast_fu_778_p1 = $signed(tmp_78_fu_768_p4);

assign p_Result_82_3_1_ca_fu_1066_p1 = $signed(tmp_82_fu_1056_p4);

assign p_Result_82_3_2_ca_fu_1138_p1 = $signed(tmp_83_fu_1128_p4);

assign p_Result_82_3_cast_fu_994_p1 = $signed(tmp_81_fu_984_p4);

assign p_Result_84_0_1_fu_354_p3 = {{tmp_108_fu_350_p1}, {6'd0}};

assign p_Result_84_0_2_fu_430_p3 = {{tmp_115_fu_426_p1}, {6'd0}};

assign p_Result_84_0_3_fu_506_p3 = {{tmp_121_fu_502_p1}, {6'd0}};

assign p_Result_84_1_2_fu_650_p3 = {{tmp_133_fu_646_p1}, {6'd0}};

assign p_Result_84_1_3_fu_722_p3 = {{tmp_139_fu_718_p1}, {6'd0}};

assign p_Result_84_1_fu_578_p3 = {{tmp_127_fu_574_p1}, {6'd0}};

assign p_Result_84_2_1_fu_866_p3 = {{tmp_151_fu_862_p1}, {6'd0}};

assign p_Result_84_2_3_fu_938_p3 = {{tmp_157_fu_934_p1}, {6'd0}};

assign p_Result_84_2_fu_794_p3 = {{tmp_145_fu_790_p1}, {6'd0}};

assign p_Result_84_3_1_fu_1082_p3 = {{tmp_169_fu_1078_p1}, {6'd0}};

assign p_Result_84_3_2_fu_1154_p3 = {{tmp_175_fu_1150_p1}, {6'd0}};

assign p_Result_84_3_fu_1010_p3 = {{tmp_163_fu_1006_p1}, {6'd0}};

assign p_Result_cast_fu_1964_p1 = $signed(tmp_84_fu_1954_p4);

assign p_Val2_63_0_3_fu_1919_p2 = (tmp2_reg_2711 + tmp3_fu_1914_p2);

assign p_Val2_63_1_3_fu_1929_p2 = (tmp5_reg_2721 + tmp6_fu_1924_p2);

assign p_Val2_63_2_3_fu_1939_p2 = (tmp8_reg_2731 + tmp9_fu_1934_p2);

assign p_Val2_63_3_3_fu_1949_p2 = (tmp11_reg_2741 + tmp12_fu_1944_p2);

assign r_V_0_1_fu_322_p2 = ($signed(tmp_79_0_1_fu_314_p1) - $signed(tmp_80_0_1_fu_318_p1));

assign r_V_0_2_fu_398_p2 = ($signed(tmp_79_0_2_fu_394_p1) - $signed(tmp_80_0_1_fu_318_p1));

assign r_V_0_3_fu_474_p2 = ($signed(tmp_79_0_3_fu_470_p1) - $signed(tmp_80_0_1_fu_318_p1));

assign r_V_1_2_fu_618_p2 = ($signed(tmp_79_0_2_fu_394_p1) - $signed(tmp_79_0_1_fu_314_p1));

assign r_V_1_3_fu_690_p2 = ($signed(tmp_79_0_3_fu_470_p1) - $signed(tmp_79_0_1_fu_314_p1));

assign r_V_1_fu_546_p2 = ($signed(tmp_80_0_1_fu_318_p1) - $signed(tmp_79_0_1_fu_314_p1));

assign r_V_2_1_fu_834_p2 = ($signed(tmp_79_0_1_fu_314_p1) - $signed(tmp_79_0_2_fu_394_p1));

assign r_V_2_3_fu_906_p2 = ($signed(tmp_79_0_3_fu_470_p1) - $signed(tmp_79_0_2_fu_394_p1));

assign r_V_2_fu_762_p2 = ($signed(tmp_80_0_1_fu_318_p1) - $signed(tmp_79_0_2_fu_394_p1));

assign r_V_3_1_fu_1050_p2 = ($signed(tmp_79_0_1_fu_314_p1) - $signed(tmp_79_0_3_fu_470_p1));

assign r_V_3_2_fu_1122_p2 = ($signed(tmp_79_0_2_fu_394_p1) - $signed(tmp_79_0_3_fu_470_p1));

assign r_V_3_fu_978_p2 = ($signed(tmp_80_0_1_fu_318_p1) - $signed(tmp_79_0_3_fu_470_p1));

assign res_0_V_write_assig_1_fu_2402_p1 = res_0_V_write_assig_fu_2394_p3;

assign res_0_V_write_assig_fu_2394_p3 = {{invert_table5_q0}, {4'd0}};

assign res_1_V_write_assig_1_fu_2414_p1 = res_1_V_write_assig_fu_2406_p3;

assign res_1_V_write_assig_fu_2406_p3 = {{invert_table5_q1}, {4'd0}};

assign res_2_V_write_assig_1_fu_2426_p1 = res_2_V_write_assig_fu_2418_p3;

assign res_2_V_write_assig_fu_2418_p3 = {{invert_table5_q2}, {4'd0}};

assign res_3_V_write_assig_1_fu_2438_p1 = res_3_V_write_assig_fu_2430_p3;

assign res_3_V_write_assig_fu_2430_p3 = {{invert_table5_q3}, {4'd0}};

assign ret_V_19_1_fu_2024_p2 = ($signed(17'd1) + $signed(p_Result_1_cast_fu_2002_p1));

assign ret_V_19_2_fu_2062_p2 = ($signed(17'd1) + $signed(p_Result_2_cast_fu_2040_p1));

assign ret_V_19_3_fu_2100_p2 = ($signed(17'd1) + $signed(p_Result_3_cast_fu_2078_p1));

assign ret_V_21_0_1_fu_368_p2 = ($signed(16'd1) + $signed(p_Result_82_0_1_ca_fu_338_p1));

assign ret_V_21_0_2_fu_444_p2 = ($signed(16'd1) + $signed(p_Result_82_0_2_ca_fu_414_p1));

assign ret_V_21_0_3_fu_520_p2 = ($signed(16'd1) + $signed(p_Result_82_0_3_ca_fu_490_p1));

assign ret_V_21_1_2_fu_664_p2 = ($signed(16'd1) + $signed(p_Result_82_1_2_ca_fu_634_p1));

assign ret_V_21_1_3_fu_736_p2 = ($signed(16'd1) + $signed(p_Result_82_1_3_ca_fu_706_p1));

assign ret_V_21_1_fu_592_p2 = ($signed(16'd1) + $signed(p_Result_82_1_cast_fu_562_p1));

assign ret_V_21_2_1_fu_880_p2 = ($signed(16'd1) + $signed(p_Result_82_2_1_ca_fu_850_p1));

assign ret_V_21_2_3_fu_952_p2 = ($signed(16'd1) + $signed(p_Result_82_2_3_ca_fu_922_p1));

assign ret_V_21_2_fu_808_p2 = ($signed(16'd1) + $signed(p_Result_82_2_cast_fu_778_p1));

assign ret_V_21_3_1_fu_1096_p2 = ($signed(16'd1) + $signed(p_Result_82_3_1_ca_fu_1066_p1));

assign ret_V_21_3_2_fu_1168_p2 = ($signed(16'd1) + $signed(p_Result_82_3_2_ca_fu_1138_p1));

assign ret_V_21_3_fu_1024_p2 = ($signed(16'd1) + $signed(p_Result_82_3_cast_fu_994_p1));

assign ret_V_s_fu_1986_p2 = ($signed(17'd1) + $signed(p_Result_cast_fu_1964_p1));

assign tmp11_fu_1908_p2 = (exp_table4_q11 + exp_table4_q10);

assign tmp12_fu_1944_p2 = (32'd1048576 + exp_table4_load_9_reg_2736);

assign tmp2_fu_1890_p2 = (exp_table4_q0 + exp_table4_q1);

assign tmp3_fu_1914_p2 = (32'd1048576 + exp_table4_load_2_reg_2706);

assign tmp5_fu_1896_p2 = (exp_table4_q3 + exp_table4_q4);

assign tmp6_fu_1924_p2 = (32'd1048576 + exp_table4_load_5_reg_2716);

assign tmp8_fu_1902_p2 = (exp_table4_q6 + exp_table4_q7);

assign tmp9_fu_1934_p2 = (32'd1048576 + exp_table4_load_8_reg_2726);

assign tmp_106_fu_342_p3 = r_V_0_1_fu_322_p2[32'd32];

assign tmp_108_fu_350_p1 = r_V_0_1_fu_322_p2[17:0];

assign tmp_110_fu_390_p1 = p_5_0_1_fu_382_p3[14:0];

assign tmp_111_fu_1204_p3 = index_0_1_fu_1194_p2[32'd15];

assign tmp_112_fu_1220_p1 = p_3_0_1_fu_1212_p3[9:0];

assign tmp_113_fu_1224_p4 = {{p_3_0_1_fu_1212_p3[14:10]}};

assign tmp_114_fu_418_p3 = r_V_0_2_fu_398_p2[32'd32];

assign tmp_115_fu_426_p1 = r_V_0_2_fu_398_p2[17:0];

assign tmp_116_fu_466_p1 = p_5_0_2_fu_458_p3[14:0];

assign tmp_117_fu_1258_p3 = index_0_2_fu_1248_p2[32'd15];

assign tmp_118_fu_1274_p1 = p_3_0_2_fu_1266_p3[9:0];

assign tmp_119_fu_1278_p4 = {{p_3_0_2_fu_1266_p3[14:10]}};

assign tmp_120_fu_494_p3 = r_V_0_3_fu_474_p2[32'd32];

assign tmp_121_fu_502_p1 = r_V_0_3_fu_474_p2[17:0];

assign tmp_122_fu_542_p1 = p_5_0_3_fu_534_p3[14:0];

assign tmp_123_fu_1312_p3 = index_0_3_fu_1302_p2[32'd15];

assign tmp_124_fu_1328_p1 = p_3_0_3_fu_1320_p3[9:0];

assign tmp_125_fu_1332_p4 = {{p_3_0_3_fu_1320_p3[14:10]}};

assign tmp_126_fu_566_p3 = r_V_1_fu_546_p2[32'd32];

assign tmp_127_fu_574_p1 = r_V_1_fu_546_p2[17:0];

assign tmp_128_fu_614_p1 = p_5_1_fu_606_p3[14:0];

assign tmp_129_fu_1366_p3 = index_s_fu_1356_p2[32'd15];

assign tmp_130_fu_1382_p1 = p_3_1_fu_1374_p3[9:0];

assign tmp_131_fu_1386_p4 = {{p_3_1_fu_1374_p3[14:10]}};

assign tmp_132_fu_638_p3 = r_V_1_2_fu_618_p2[32'd32];

assign tmp_133_fu_646_p1 = r_V_1_2_fu_618_p2[17:0];

assign tmp_134_fu_686_p1 = p_5_1_2_fu_678_p3[14:0];

assign tmp_135_fu_1420_p3 = index_115_2_fu_1410_p2[32'd15];

assign tmp_136_fu_1436_p1 = p_3_1_2_fu_1428_p3[9:0];

assign tmp_137_fu_1440_p4 = {{p_3_1_2_fu_1428_p3[14:10]}};

assign tmp_138_fu_710_p3 = r_V_1_3_fu_690_p2[32'd32];

assign tmp_139_fu_718_p1 = r_V_1_3_fu_690_p2[17:0];

assign tmp_140_fu_758_p1 = p_5_1_3_fu_750_p3[14:0];

assign tmp_141_fu_1474_p3 = index_115_3_fu_1464_p2[32'd15];

assign tmp_142_fu_1490_p1 = p_3_1_3_fu_1482_p3[9:0];

assign tmp_143_fu_1494_p4 = {{p_3_1_3_fu_1482_p3[14:10]}};

assign tmp_144_fu_782_p3 = r_V_2_fu_762_p2[32'd32];

assign tmp_145_fu_790_p1 = r_V_2_fu_762_p2[17:0];

assign tmp_146_fu_830_p1 = p_5_2_fu_822_p3[14:0];

assign tmp_147_fu_1528_p3 = index_2_fu_1518_p2[32'd15];

assign tmp_148_fu_1544_p1 = p_3_2_fu_1536_p3[9:0];

assign tmp_149_fu_1548_p4 = {{p_3_2_fu_1536_p3[14:10]}};

assign tmp_150_fu_854_p3 = r_V_2_1_fu_834_p2[32'd32];

assign tmp_151_fu_862_p1 = r_V_2_1_fu_834_p2[17:0];

assign tmp_152_fu_902_p1 = p_5_2_1_fu_894_p3[14:0];

assign tmp_153_fu_1582_p3 = index_2_1_fu_1572_p2[32'd15];

assign tmp_154_fu_1598_p1 = p_3_2_1_fu_1590_p3[9:0];

assign tmp_155_fu_1602_p4 = {{p_3_2_1_fu_1590_p3[14:10]}};

assign tmp_156_fu_926_p3 = r_V_2_3_fu_906_p2[32'd32];

assign tmp_157_fu_934_p1 = r_V_2_3_fu_906_p2[17:0];

assign tmp_158_fu_974_p1 = p_5_2_3_fu_966_p3[14:0];

assign tmp_159_fu_1636_p3 = index_2_3_fu_1626_p2[32'd15];

assign tmp_160_fu_1652_p1 = p_3_2_3_fu_1644_p3[9:0];

assign tmp_161_fu_1656_p4 = {{p_3_2_3_fu_1644_p3[14:10]}};

assign tmp_162_fu_998_p3 = r_V_3_fu_978_p2[32'd32];

assign tmp_163_fu_1006_p1 = r_V_3_fu_978_p2[17:0];

assign tmp_164_fu_1046_p1 = p_5_3_fu_1038_p3[14:0];

assign tmp_165_fu_1690_p3 = index_3_fu_1680_p2[32'd15];

assign tmp_166_fu_1706_p1 = p_3_3_fu_1698_p3[9:0];

assign tmp_167_fu_1710_p4 = {{p_3_3_fu_1698_p3[14:10]}};

assign tmp_168_fu_1070_p3 = r_V_3_1_fu_1050_p2[32'd32];

assign tmp_169_fu_1078_p1 = r_V_3_1_fu_1050_p2[17:0];

assign tmp_170_fu_1118_p1 = p_5_3_1_fu_1110_p3[14:0];

assign tmp_171_fu_1744_p3 = index_3_1_fu_1734_p2[32'd15];

assign tmp_172_fu_1760_p1 = p_3_3_1_fu_1752_p3[9:0];

assign tmp_173_fu_1764_p4 = {{p_3_3_1_fu_1752_p3[14:10]}};

assign tmp_174_fu_1142_p3 = r_V_3_2_fu_1122_p2[32'd32];

assign tmp_175_fu_1150_p1 = r_V_3_2_fu_1122_p2[17:0];

assign tmp_176_fu_1190_p1 = p_5_3_2_fu_1182_p3[14:0];

assign tmp_177_fu_1798_p3 = index_3_2_fu_1788_p2[32'd15];

assign tmp_178_fu_1814_p1 = p_3_3_2_fu_1806_p3[9:0];

assign tmp_179_fu_1818_p4 = {{p_3_3_2_fu_1806_p3[14:10]}};

assign tmp_180_fu_2106_p3 = p_Val2_63_0_3_reg_2746[32'd31];

assign tmp_181_fu_1968_p1 = p_Val2_63_0_3_fu_1919_p2[15:0];

assign tmp_182_fu_2125_p1 = p_4_fu_2118_p3[15:0];

assign tmp_183_fu_2129_p3 = p_4_fu_2118_p3[32'd16];

assign tmp_184_fu_2145_p1 = p_2_51_fu_2137_p3[9:0];

assign tmp_185_fu_2149_p4 = {{p_2_51_fu_2137_p3[15:10]}};

assign tmp_186_fu_2178_p3 = p_Val2_63_1_3_reg_2751[32'd31];

assign tmp_187_fu_2006_p1 = p_Val2_63_1_3_fu_1929_p2[15:0];

assign tmp_188_fu_2197_p1 = p_4_1_fu_2190_p3[15:0];

assign tmp_189_fu_2201_p3 = p_4_1_fu_2190_p3[32'd16];

assign tmp_190_fu_2217_p1 = p_2_1_52_fu_2209_p3[9:0];

assign tmp_191_fu_2221_p4 = {{p_2_1_52_fu_2209_p3[15:10]}};

assign tmp_192_fu_2250_p3 = p_Val2_63_2_3_reg_2756[32'd31];

assign tmp_193_fu_2044_p1 = p_Val2_63_2_3_fu_1939_p2[15:0];

assign tmp_194_fu_2269_p1 = p_4_2_fu_2262_p3[15:0];

assign tmp_195_fu_2273_p3 = p_4_2_fu_2262_p3[32'd16];

assign tmp_196_fu_2289_p1 = p_2_2_fu_2281_p3[9:0];

assign tmp_197_fu_2293_p4 = {{p_2_2_fu_2281_p3[15:10]}};

assign tmp_198_fu_2322_p3 = p_Val2_63_3_3_reg_2761[32'd31];

assign tmp_199_fu_2082_p1 = p_Val2_63_3_3_fu_1949_p2[15:0];

assign tmp_200_fu_2341_p1 = p_4_3_fu_2334_p3[15:0];

assign tmp_201_fu_2345_p3 = p_4_3_fu_2334_p3[32'd16];

assign tmp_202_fu_2361_p1 = p_2_3_55_fu_2353_p3[9:0];

assign tmp_203_fu_2365_p4 = {{p_2_3_55_fu_2353_p3[15:10]}};

assign tmp_66_fu_404_p4 = {{r_V_0_2_fu_398_p2[32:18]}};

assign tmp_69_fu_480_p4 = {{r_V_0_3_fu_474_p2[32:18]}};

assign tmp_72_fu_552_p4 = {{r_V_1_fu_546_p2[32:18]}};

assign tmp_75_fu_624_p4 = {{r_V_1_2_fu_618_p2[32:18]}};

assign tmp_76_fu_696_p4 = {{r_V_1_3_fu_690_p2[32:18]}};

assign tmp_77_1_fu_2018_p2 = ((p_Result_81_1_fu_2010_p3 == 20'd0) ? 1'b1 : 1'b0);

assign tmp_77_2_fu_2056_p2 = ((p_Result_81_2_fu_2048_p3 == 20'd0) ? 1'b1 : 1'b0);

assign tmp_77_3_fu_2094_p2 = ((p_Result_81_3_fu_2086_p3 == 20'd0) ? 1'b1 : 1'b0);

assign tmp_77_fu_1980_p2 = ((p_Result_4_fu_1972_p3 == 20'd0) ? 1'b1 : 1'b0);

assign tmp_78_fu_768_p4 = {{r_V_2_fu_762_p2[32:18]}};

assign tmp_79_0_1_fu_314_p1 = $signed(data_1_V_read);

assign tmp_79_0_2_fu_394_p1 = $signed(data_2_V_read);

assign tmp_79_0_3_fu_470_p1 = $signed(data_3_V_read);

assign tmp_79_fu_840_p4 = {{r_V_2_1_fu_834_p2[32:18]}};

assign tmp_80_0_1_fu_318_p1 = $signed(data_0_V_read);

assign tmp_80_fu_912_p4 = {{r_V_2_3_fu_906_p2[32:18]}};

assign tmp_81_fu_984_p4 = {{r_V_3_fu_978_p2[32:18]}};

assign tmp_82_fu_1056_p4 = {{r_V_3_1_fu_1050_p2[32:18]}};

assign tmp_83_fu_1128_p4 = {{r_V_3_2_fu_1122_p2[32:18]}};

assign tmp_84_fu_1954_p4 = {{p_Val2_63_0_3_fu_1919_p2[31:16]}};

assign tmp_85_fu_2173_p1 = exp_res_index_1_fu_2165_p3;

assign tmp_86_1_fu_2245_p1 = exp_res_index_1_1_fu_2237_p3;

assign tmp_86_2_fu_2317_p1 = exp_res_index_1_2_fu_2309_p3;

assign tmp_86_3_fu_2389_p1 = exp_res_index_1_3_fu_2381_p3;

assign tmp_86_fu_1992_p4 = {{p_Val2_63_1_3_fu_1929_p2[31:16]}};

assign tmp_87_fu_2030_p4 = {{p_Val2_63_2_3_fu_1939_p2[31:16]}};

assign tmp_88_0_1_fu_362_p2 = ((p_Result_84_0_1_fu_354_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_0_2_fu_438_p2 = ((p_Result_84_0_2_fu_430_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_0_3_fu_514_p2 = ((p_Result_84_0_3_fu_506_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_1_2_fu_658_p2 = ((p_Result_84_1_2_fu_650_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_1_3_fu_730_p2 = ((p_Result_84_1_3_fu_722_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_1_fu_586_p2 = ((p_Result_84_1_fu_578_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_2_1_fu_874_p2 = ((p_Result_84_2_1_fu_866_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_2_3_fu_946_p2 = ((p_Result_84_2_3_fu_938_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_2_fu_802_p2 = ((p_Result_84_2_fu_794_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_3_1_fu_1090_p2 = ((p_Result_84_3_1_fu_1082_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_3_2_fu_1162_p2 = ((p_Result_84_3_2_fu_1154_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_3_fu_1018_p2 = ((p_Result_84_3_fu_1010_p3 == 24'd0) ? 1'b1 : 1'b0);

assign tmp_88_fu_2068_p4 = {{p_Val2_63_3_3_fu_1949_p2[31:16]}};

assign tmp_91_0_1_fu_1842_p1 = index_1_0_1_reg_2586;

assign tmp_91_0_2_fu_1846_p1 = index_1_0_2_reg_2591;

assign tmp_91_0_3_fu_1850_p1 = index_1_0_3_reg_2596;

assign tmp_91_1_2_fu_1858_p1 = index_1_1_2_reg_2606;

assign tmp_91_1_3_fu_1862_p1 = index_1_1_3_reg_2611;

assign tmp_91_1_fu_1854_p1 = index_1_1_reg_2601;

assign tmp_91_2_1_fu_1870_p1 = index_1_2_1_reg_2621;

assign tmp_91_2_3_fu_1874_p1 = index_1_2_3_reg_2626;

assign tmp_91_2_fu_1866_p1 = index_1_2_reg_2616;

assign tmp_91_3_1_fu_1882_p1 = index_1_3_1_reg_2636;

assign tmp_91_3_2_fu_1886_p1 = index_1_3_2_reg_2641;

assign tmp_91_3_fu_1878_p1 = index_1_3_reg_2631;

assign tmp_s_fu_328_p4 = {{r_V_0_1_fu_322_p2[32:18]}};

endmodule //softmax
